{
  "hash": "e9072140d45e2de0f70d17853f8a6a73",
  "result": {
    "markdown": "---\ndescription: |\n  Summary of the changes in the new mlr 2.10 version\ntitle: \"mlr 2.10\"\nauthors: [\"Janek Thomas\"]\ndate: 2017-02-13\ncategories: [\"R\"]\ntags: [\"mlr\", \"changelog\"]\n\n---\n\n\n\n\nmlr 2.10 is now on CRAN. Please update your package if you haven't done so in a while.\n\nHere is an overview of the changes:\n\n## functions - general\n* fixed bug in resample when using predict = \"train\" (issue #1284)\n* update to irace 2.0 -- there are algorithmic changes in irace that may affect\n  performance\n* generateFilterValuesData: fixed a bug wrt feature ordering\n* imputeLearner: fixed a bug when data actually contained no NAs\n* print.Learner: if a learner hyperpar was set to value \"NA\" this was not\n  displayed in printer\n* makeLearner, setHyperPars: if you mistype a learner or hyperpar name, mlr\n  uses fuzzy matching to suggest the 3 closest names in the message\n* tuneParams: tuning with irace is now also parallelized, i.e., different\n  learner configs are evaluated in parallel.\n* benchmark: mini fix, arg 'learners' now also accepts class strings\n* object printers: some mlr printers show head previews of data.frames.\n  these now also print info on the total nr of rows and cols and are less confusing\n* aggregations: have better properties now, they know whether they require training or\n  test set evals\n* the filter methods have better R docs\n* filter randomForestSRC.var.select: new arg \"method\"\n* filter mrmr: fixed some smaller bugs and updated properties\n* generateLearningCurveData: also accepts single learner, does not require a list\n* plotThreshVsPerf: added \"measures\" arg\n* plotPartialDependence: can create tile plots with joint partial dependence\n  on two features for multiclass classification by facetting across the classes\n* generatePartialDependenceData and generateFunctionalANOVAData: expanded\n  \"fun\" argument to allow for calculation of weights\n* new \"?mlrFamilies\" manual page which lists all families and the functions\n  belonging to it\n* we are converging on data.table as a standard internally, this should not\n  change any API behavior on the outside, though\n* generateHyperParsEffectData and plotHyperParsEffect now support more than 2\n  hyperparameters\n* linear.correlation, rank.correlation, anova.test: use Rfast instead of\n  FSelector/custom implementation now, performance should be much better\n* use of our own colAUC function instead of the ROCR package for AUC calculation\n  to improve performance\n* we output resample performance messages for every iteration now\n* performance improvements for the auc measure\n* createDummyFeatures supports vectors now\n* removed the pretty.names argument from plotHyperParsEffect -- labels can be set\n  though normal ggplot2 functions on the returned object\n* Fixed a bad bug in resample, the slot \"runtime\" or a ResampleResult,\n  when the runtime was measured not in seconds but e.g. mins. R measures then potentially in mins,\n  but mlr claimed it would be seconds.\n* New \"dummy\" learners (that disregard features completely) can be fitted now for baseline comparisons,\n  see \"featureless\" learners below.\n\n## functions - new\n* filter: randomForest.importance\n* generateFeatureImportanceData: permutation-based feature importance and local\n  importance\n* getFeatureImportanceLearner: new Learner API function\n* getFeatureImportance: top level function to extract feature importance\n  information\n* calculateROCMeasures\n* calculateConfusionMatrix: new confusion-matrix like function that calculates\n  and tables many receiver operator measures\n* makeLearners: create multiple learners at once\n* getLearnerId, getLearnerType, getLearnerPredictType, getLearnerPackages\n* getLearnerParamSet, getLearnerParVals\n* getRRPredictionList\n* addRRMeasure\n* plotResiduals\n* getLearnerShortName\n* mergeBenchmarkResults\n\n## functions - renamed\n* Renamed rf.importance filter (now deprecated) to randomForestSRC.var.rfsrc\n* Renamed rf.min.depth filter (now deprecated) to randomForestSRC.var.select\n* Renamed getConfMatrix (now deprecated) to calculateConfusionMatrix\n* Renamed setId (now deprecated) to setLearnerId\n\n## functions - removed\n* mergeBenchmarkResultLearner, mergeBenchmarkResultTask\n\n## learners - general\n* classif.ada: fixed some param problem with rpart.control params\n* classif.cforest, regr.cforest, surv.cforest:\n  removed parameters \"minprob\", \"pvalue\", \"randomsplits\"\n  as these are set internally and cannot be changed by the user\n* regr.GPfit: some more params for correlation kernel\n* classif.xgboost, regr.xgboost: can now properly handle NAs (property was missing and other problems), added \"colsample_bylevel\" parameter\n* adapted {classif,regr,surv}.ranger parameters for new ranger version\n\n## learners - new\n* multilabel.cforest\n* surv.gbm\n* regr.cvglmnet\n* {classif,regr,surv}.gamboost\n* classif.earth\n* {classif,regr}.evtree\n* {classif,regr}.evtree\n\n## learners - removed\n* classif.randomForestSRCSyn, regr.randomForestSRCSyn: due to continued stability issues\n\n## measures - new\n* ssr, qsr, lsr\n* rrse, rae, mape\n* kappa, wkappa\n* msle, rmsle\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}