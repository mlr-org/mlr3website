{
  "hash": "79ccbdd95c2a36d0d79de0ba479db30a",
  "result": {
    "markdown": "---\ntitle: mlr-2.14.0\nauthors: [\"Patrick Schratz\"]\ndate: '2019-04-18'\nslug: mlr-2-14-0\ncategories:\n  - r-bloggers\ntags:\n  - release\ndescription: \"The new mlr-2.14.0 and announcement of mlr3\"\n\n---\n\n\nThe last _mlr_ release was in August 2018 - so it was definitely time for a new release after around 9 months of development!\n\nThe NEWS file can be found directly [here](https://mlr.mlr-org.com/news/index.html).\n\nIn this post we highlight some of the new implementations that come along with this release of v2.14.0\n\n## Filters\n\nWe integrated the filter methods from the _praznik_ package. These were quite few:\n\n- praznik_JMI\n- praznik_DISR\n- praznik_JMIM\n- praznik_MIM\n- praznik_NJMIM\n- praznik_MRMR\n- praznik_CMIM\n\nAlso, a long awaited PR that we finally merged was the inclusion of the _FSelectorRcpp_ filters.\nThese are around 100 times faster than the Java-driven ones from the _FSelector_ package.\n\nIn addition, we are now using a consistent naming scheme for the filters following `<package-name>_<filter-name>`.\nThis change might break your existing code if you used _mlr_ filters before.\nHowever, since it is just a naming change we think the burden of updating your code is acceptable.\n\n## Learners\n\nTwo new learners were added:\n\n- classif.liquidSVM\n- regr.liquidSVM\n\nLearner `regr.h2o.gbm` now uses `h2o.use.data.table = TRUE` by default which should result in a runtime performance increase.\n\nIt is also possible to retrieve the feature importance of h2O learners now.\n\n## Resampling\n\nYou can now provide fully predefined indices for resampling.\nThis is useful for datasets that have a certain grouping structure (e.g. spatial data) that is difficult to specify otherwise.\n\n## mlr-org NEWS\n\nYou might be wondering what we've been up to in the last months in our group.\nThe major project that we started was [mlr3](https://github.com/mlr-org/mlr3).\nThis is a clean rewrite of _mlr_ with a modular structure to simplify usage and maintenance of the \"mlr idea\" in the future, both for users and developers.\nWe are not completely finished yet, but you can take a look at the Github repo at what we have achieved so far.\nOnce we are ready to release the initial version, we will of course write a dedicated post about it.\n\nPutting a lot of time into _mlr3_ means having less time for responding to issues and questions in _mlr_.\nWe would like to apologize for this.\nWe are working on this more or less as a side project along our day jobs and our resources are limited.\nIf you want to help and get involved with _mlr_ or _mlr3_, we would be very happy to have you.\nOur team is not a closed group and anyone can contribute to the mlr-org projects.\n\nThe change in development focus also led to a change of maintainer for _mlr_.\nAs [Bernd Bischl](https://www.compstat.statistik.uni-muenchen.de/people/bischl/) (the creator and maintainer) of _mlr_ has a lot of duties, we decided to make [Lars Kotthoff](https://www.cs.uwyo.edu/~larsko/) and [Patrick Schratz](https://pjs-web.de/) the new maintainers of the _mlr_ package.\n\n_mlr_ will only get bug fixes and minor updates, as we are focusing the development of new things on _mlr3_.\nRight now, we have over 400 issues and 30 pull requests so there is a still a lot to do :)\n\n## Roadmap for mlr\n\nWe are will publish new releases every three months from now on, regardless of the changes that have come in.\n_mlr_ will continue to exist next to _mlr3_.\nIf users start contributing new features to _mlr_, we are also happy to include those in the package.\nAs announced already, we will clean up the _mlr_ repo issue and pull request in the coming months to be able to fully concentrate on _mlr3_ after its initial release.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}