{
  "hash": "80673cd664b32516343fb04715280aef",
  "result": {
    "markdown": "---\ntitle: \"Hyperband Series - Data Set Subsampling\"\ndescription: |\n  Optimize the hyperparameters of a Support Vector Machine with Hyperband.\ncategories:\n  - tuning\n  - classification\nauthor:\n  - name: Marc Becker\n    url: https://github.com/be-marc\n  - name: Sebastian Fischer\n    url: https://github.com/sebffischer\ndate: 2023-01-16\nbibliography: bibliography.bib\nknitr:\n  opts_chunk:\n    R.options:\n      datatable.print.nrows: 6\naliases:\n  - ../../../gallery/series/2022-12-02-hyperband-subsampling/index.html\n  - ../../../gallery/series/2023-01-16-hyperband-subsampling/index.html\n---\n\n\n\n\n\n\n# Scope\n\nWe continue working with the *Hyperband* optimization algorithm [@li_2018].\nThe [previous post](/gallery/optimization/2022-12-01-hyperband-xgboost) used the number of boosting iterations of an XGBoost model as the resource.\nHowever, Hyperband is not limited to machine learning algorithms that are trained iteratively.\nThe resource can also be the number of features, the training time of a model, or the size of the training data set.\nIn this post, we will tune a support vector machine and use the size of the training data set as the fidelity parameter.\nThe time to train a support vector machine and the performance increases with the size of the data set.\nThis makes the data set size a suitable fidelity parameter for Hyperband.\nThis is the second part of the Hyperband series.\nThe first part can be found here [Hyperband Series - Iterative Training](/gallery/optimization/2023-01-15-hyperband-xgboost).\nIf you don't know much about Hyperband, check out the first post which explains the algorithm in detail.\nWe assume that you are already familiar with tuning in the mlr3 ecosystem.\nIf not, you should start with the [book chapter on optimization](https://mlr3book.mlr-org.com/optimization.html) or the [Hyperparameter Optimization on the Palmer Penguins Data Set](/gallery/optimization/2022-11-10-hyperparameter-optimization-on-the-palmer-penguins) post.\nA little knowledge about [mlr3pipelines](https://mlr3pipelines.mlr-org.com) is beneficial but not necessary to understand the example.\n\n# Hyperparameter Optimization\n\nIn this post, we will optimize the hyperparameters of the support vector machine on the [`Sonar`](https://mlr3.mlr-org.com/reference/mlr_tasks_sonar.html) data set.\nWe begin by constructing a classification machine by setting `type` to `\"C-classification\"`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"mlr3verse\")\n\nlearner = lrn(\"classif.svm\", id = \"svm\", type = \"C-classification\")\n```\n:::\n\n\nThe [mlr3pipelines](https://mlr3pipelines.mlr-org.com) package features a [`PipeOp`](https://mlr3pipelines.mlr-org.com/reference/PipeOp.html) for subsampling.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npo(\"subsample\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPipeOp: <subsample> (not trained)\nvalues: <frac=0.6321, stratify=FALSE, replace=FALSE>\nInput channels <name [train type, predict type]>:\n  input [Task,Task]\nOutput channels <name [train type, predict type]>:\n  output [Task,Task]\n```\n:::\n:::\n\n\nThe [`PipeOp`](https://mlr3pipelines.mlr-org.com/reference/PipeOp.html) controls the size of the training data set with the `frac` parameter.\nWe connect the [`PipeOp`](https://mlr3pipelines.mlr-org.com/reference/PipeOp.html)  with the learner and get a [`GraphLearner`](https://mlr3pipelines.mlr-org.com/reference/mlr_learners_graph.html).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngraph_learner = as_learner(\n  po(\"subsample\") %>>%\n  learner\n)\n```\n:::\n\n\nThe graph learner subsamples and then fits a support vector machine on the data subset.\nThe parameter set of the graph learner is a combination of the parameter sets of the [`PipeOp`](https://mlr3pipelines.mlr-org.com/reference/PipeOp.html) and learner.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nas.data.table(graph_learner$param_set)[, .(id, lower, upper, levels)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                    id lower upper                             levels\n 1:     subsample.frac     0   Inf                                   \n 2: subsample.stratify    NA    NA                         TRUE,FALSE\n 3:  subsample.replace    NA    NA                         TRUE,FALSE\n 4:      svm.cachesize  -Inf   Inf                                   \n 5:  svm.class.weights    NA    NA                                   \n---                                                                  \n15:             svm.nu  -Inf   Inf                                   \n16:          svm.scale    NA    NA                                   \n17:      svm.shrinking    NA    NA                         TRUE,FALSE\n18:      svm.tolerance     0   Inf                                   \n19:           svm.type    NA    NA C-classification,nu-classification\n```\n:::\n:::\n\n\nNext, we create the search space.\nWe use [`TuneToken`](https://paradox.mlr-org.com/reference/to_tune.html) to mark which hyperparameters should be tuned.\nWe have to prefix the hyperparameters with the id of the [`PipeOps`](https://mlr3pipelines.mlr-org.com/reference/PipeOp.html).\nThe `subsample.frac` is the fidelity parameter that must be tagged with `\"budget\"` in the search space.\nThe data set size is increased from 3.7% to 100%.\nFor the other hyperparameters, we took the search space for support vector machines from the @kuehn_2018 article.\nThis search space works for a wide range of data sets.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngraph_learner$param_set$set_values(\n  subsample.frac  = to_tune(p_dbl(3^-3, 1, tags = \"budget\")),\n  svm.kernel      = to_tune(c(\"linear\", \"polynomial\", \"radial\")),\n  svm.cost        = to_tune(1e-4, 1e3, logscale = TRUE),\n  svm.gamma       = to_tune(1e-4, 1e3, logscale = TRUE),\n  svm.tolerance   = to_tune(1e-4, 2, logscale = TRUE),\n  svm.degree      = to_tune(2, 5)\n)\n```\n:::\n\n\nSupport vector machines often crash or never finish the training with certain hyperparameter configurations.\nWe set a timeout of 30 seconds and a [fallback learner](https://mlr3book.mlr-org.com/optimization.html#sec-encapsulation-fallback) to handle these cases.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ngraph_learner$encapsulate = c(train = \"evaluate\", predict = \"evaluate\")\ngraph_learner$timeout = c(train = 30, predict = 30)\ngraph_learner$fallback = lrn(\"classif.featureless\")\n```\n:::\n\n\nLet's create the tuning instance.\nWe use the `\"none\"` terminator because Hyperband controls the termination itself.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstance = ti(\n  task = tsk(\"sonar\"),\n  learner = graph_learner,\n  resampling = rsmp(\"cv\", folds = 3),\n  measures = msr(\"classif.ce\"),\n  terminator = trm(\"none\")\n)\ninstance\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<TuningInstanceSingleCrit>\n* State:  Not optimized\n* Objective: <ObjectiveTuning:subsample.svm_on_sonar>\n* Search Space:\n               id    class       lower     upper nlevels\n1: subsample.frac ParamDbl  0.03703704 1.0000000     Inf\n2:       svm.cost ParamDbl -9.21034037 6.9077553     Inf\n3:     svm.degree ParamInt  2.00000000 5.0000000       4\n4:      svm.gamma ParamDbl -9.21034037 6.9077553     Inf\n5:     svm.kernel ParamFct          NA        NA       3\n6:  svm.tolerance ParamDbl -9.21034037 0.6931472     Inf\n* Terminator: <TerminatorNone>\n```\n:::\n:::\n\n\nWe load the [`Hyperband tuner`](https://mlr3hyperband.mlr-org.com/reference/mlr_tuners_hyperband.html) and set `eta = 3`.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(\"mlr3hyperband\")\n\ntuner = tnr(\"hyperband\", eta = 3)\n```\n:::\n\n\nUsing `eta = 3` and a lower bound of 3.7% for the data set size, results in the following schedule.\nConfigurations with the same data set size are evaluated in parallel.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-90b38cb799b90ab16ab4\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-90b38cb799b90ab16ab4\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"budget\":[0.037037037037037,0.111111111111111,0.111111111111111,0.333333333333333,0.333333333333333,0.333333333333333,1,1,1,1],\"bracket\":[3,3,2,3,2,1,3,2,1,0],\"stage\":[0,1,0,2,1,0,3,2,1,0],\"n\":[27,9,12,3,4,6,1,1,2,4]},\"columns\":[{\"accessor\":\"budget\",\"name\":\"Data Set Size\",\"type\":\"numeric\",\"cell\":[{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"     3.7%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"3.7%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"    11.1%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"11.1%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"    11.1%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"11.1%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"    33.3%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"33.3%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"    33.3%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"33.3%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"    33.3%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"33.3%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"     100%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"100%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"     100%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"100%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"     100%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"100%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]},{\"name\":\"div\",\"attribs\":{\"className\":\"bar-chart__bar-cell\"},\"children\":[{\"name\":\"span\",\"attribs\":{\"className\":\"bar-chart__number\"},\"children\":[\"     100%\"]},{\"name\":\"div\",\"attribs\":{\"style\":{\"marginRight\":\"0.375rem\"},\"className\":\"bar-chart\"},\"children\":[{\"name\":\"div\",\"attribs\":{\"style\":{\"width\":\"100%\"},\"className\":\"bar-chart__bar\"},\"children\":[]}]}]}]},{\"accessor\":\"bracket\",\"name\":\"Bracket\",\"type\":\"numeric\"},{\"accessor\":\"stage\",\"name\":\"Stage\",\"type\":\"numeric\"},{\"accessor\":\"n\",\"name\":\"# Configurations\",\"type\":\"numeric\"}],\"pagination\":false,\"defaultPageSize\":10,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"dataKey\":\"d035c543ba82f4a26baae35b53770e57\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nNow we are ready to start the tuning.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntuner$optimize(instance)\n```\n:::\n\n\nThe best model is a support vector machine with a polynomial kernel.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ninstance$result[, .(subsample.frac, svm.cost, svm.degree, svm.gamma, svm.kernel, svm.tolerance, classif.ce)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   subsample.frac svm.cost svm.degree svm.gamma svm.kernel svm.tolerance classif.ce\n1:              1  3.04282          3  6.850538 polynomial     -1.914435  0.1926156\n```\n:::\n:::\n\n\nThe archive contains all evaluated configurations.\nWe look at the 8 configurations that were evaluated on the complete data set.\nThe configuration with the best classification error on the full data set was sampled in bracket 2.\nThe classification error was estimated to be 26% on 33% of the data set and increased to 19% on the full data set (see green line in @fig-hyperband).\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![Optimization path of the 8 configurations evaluated on the complete data set.](index_files/figure-html/fig-hyperband-1.png){#fig-hyperband fig-align='center' width=672}\n:::\n:::\n\n\n# Conclusion\n\nUsing the data set size as the budget parameter in Hyperband allows the tuning of machine learning models that are not trained iteratively.\nWe have tried to keep the runtime of the example low.\nFor your optimization, you should use cross-validation and run multiple iterations of Hyperband.\n\n# References\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../../site_libs/react-17.0.0/react.min.js\"></script>\n<script src=\"../../../site_libs/react-17.0.0/react-dom.min.js\"></script>\n<script src=\"../../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\n<script src=\"../../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/reactable-binding-0.3.0/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}