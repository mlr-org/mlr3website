{
  "hash": "37cee9407c77bf9b9b7712dc1dbbbfe4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Greedy Ensemble Selection and Stacking \ncategories:\n  - ensembles stacking\nauthor:\n  - name: Giuseppe Casalicchio\n  - name: Essential Data Science Training GmbH\n    url: https://www.essentialds.de\ndescription: |\n  Implement greedy ensemble selection and stacking on german credit set.\ndate: \"\"\nparams:\n  showsolution: true\n  base64encode: true\nlisting: false\nsearch: false\nformat:\n  html:\n    filters:\n      - ../../b64_solution.lua\n---\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n```{=html}\n<script>\nconst correctHash = \"388f324f26a11eac43d4b8067b24dd2ac13656e96edf6abc6903c81d39dbf5d6\";   // value injected by knitr\n\n/* ---------- reusable helper ---------- */\nfunction b64DecodeUtf8(b64) {\n  // 1) atob  -> binary-string   (bytes 0…255)\n  // 2) map   -> Uint8Array      (array of bytes)\n  // 3) TextDecoder('utf-8')     -> real JS string\n  const bytes = Uint8Array.from(atob(b64), c => c.charCodeAt(0));\n  return new TextDecoder('utf-8').decode(bytes);\n}\n\nasync function sha256(txt) {\n  const buf = await crypto.subtle.digest('SHA-256',\n                 new TextEncoder().encode(txt));\n  return Array.from(new Uint8Array(buf))\n              .map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\nasync function unlockOne(btn) {\n  const pass = prompt(\"Password:\");\n  if (!pass) return;\n  if (await sha256(pass) !== correctHash) {\n    alert(\"Wrong password\"); return;\n  }\n\n  /* --- decode only the solution that belongs to THIS button --- */\n  const wrapper = btn.parentElement;             // .b64-wrapper\n  wrapper.querySelectorAll('.hidden-solution').forEach(div => {\n    div.innerHTML = b64DecodeUtf8(div.dataset.encoded);\n    div.classList.remove('hidden-solution');\n    div.style.display = 'block';\n  });\n\n  /* Remove the button so the user can’t click it again */\n  btn.remove();\n}\n</script>\n\n<noscript>\n<div style=\"border: 1px solid #ccc; padding: 1em; margin-top: 1em; background: #f9f9f9;\">\n    <strong>JavaScript is required to unlock solutions.</strong><br>\n    Please enable JavaScript and reload the page,<br>\n    or download the source files from\n    <a href=\"https://github.com/mlr-org/mlr3website/\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n    and run the code locally.\n  </div>\n</noscript>\n```\n\n\n\n\n\n# Goal\n\nImplement Greedy Ensemble Selection from scratch.\nLearn how to do stacking with `mlr3pipelines`.\n\n# German Credit Data\n\n## Description\n\n- Data from 1973 to 1975 from a large regional bank in southern Germany classifying credits described by a set of attributes to good or bad credit risks.\n- Stratified sample of 1000 credits (300 bad ones and 700 good ones).\n- Customers with good credit risks perfectly complied with the conditions of the contract while customers with bad credit risks did not comply with the contract as required.\n- Available in `tsk(\"german_credit\")`.\n\n## Data Dictionary\n\nn = 1,000 observations of credits\n\n- `credit_risk`: Has the credit contract been complied with (good) or not (bad)?\n- `age`: Age of debtor in years\n- `amount`: Credit amount in DM\n- `credit_history`: History of compliance with previous or concurrent credit contracts\n- `duration`: Credit duration in months\n- `employment_duration`: Duration of debtor's employment with current employer\n- `foreign_worker`: Whether the debtor is a foreign worker\n- `housing`: Type of housing the debtor lives in\n- `installment_rate`: Credit installments as a percentage of debtor's disposable income\n- `job`: Quality of debtor's job\n- `number_credits`: Number of credits including the current one the debtor has (or had) at this bank\n- `other_debtors`: Whether there is another debtor or a guarantor for the credit\n- `other_installment_plans`: Installment plans from providers other than the credit-giving bank\n- `people_liable`: Number of persons who financially depend on the debtor\n- `personal_status_sex`: Combined information on sex and marital status\n- `present_residence`: Length of time (in years) the debtor lives in the present residence\n- `property`: The debtor's most valuable property\n- `purpose`: Purpose for which the credit is needed\n- `savings`: Debtor's saving\n- `status`: Status of the debtor's checking account with the bank\n- `telephone`: Whether there is a telephone landline registered on the debtor's name\n\n# Prerequisites\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(mlr3)\nlibrary(mlr3learners)\nlibrary(mlr3pipelines)\nlibrary(mlr3viz)\nlibrary(bbotk)\nlibrary(mlr3misc)\n\ntask = tsk(\"german_credit\")\n\nset.seed(2409)\n```\n:::\n\n\n\n# 1 Implement Greedy Ensemble Selection\n\nIn previous exercises we have seen how to do weighted model averaging and how to optimize weights numerically.\nWe now want to implement a popular method for optimizing the weights when performing model averaging: Greedy ensemble selection (GES)\n\nFirst, read the original paper (https://www.cs.cornell.edu/~caruana/ctp/ct.papers/caruana.icml04.icdm06long.pdf) and make yourself familiar with the slides covering greedy ensemble selection.\nThen, revisit the in-class exercise set.\n\nIn the in-class exercises, we wanted to do model averaging of a decision tree, a k-NN (k = 7) and a logistic regression.\nTo optimize the weights numerically, we wrote an objective function, that allows for optimizing the weights of each model so that the resulting weighted model averaging is optimal.\n\nWe now want to use GES instead of the CMA-ES.\nFirst, we will implement GES without relying on the `bbotk` infrastructure.\nAfterwards, you are free to take a look at how `Optimizer`s are implemented in `bbotk`, see, e.g., https://github.com/mlr-org/bbotk/blob/70f3f96ff0023066aa8eaa7c97484f0d6e518663/R/OptimizerCmaes.R\nand implement greedy ensemble selection as a proper `Optimizer`.\n\nIn this exercise, we will also use an outer test split to properly evaluate the performance of our ensemble with optimized weight in an unbiased manner.\nAfter you have implemented GES, make sure to benchmark the weights it found against the weights found by CMA-ES.\n\nYou can use the following code to do this:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbg = benchmark_grid(task, list(grl, grl_weights_optimized_cmaes, dt, kknn, log_reg, featureless), outer_split)\nb = benchmark(bg)\nb$aggregate(msr(\"classif.auc\"))\n```\n:::\n\n\n\nNote that this exercise is quite lengthy and rather complicated.\nIt might be best to more or less directly work along the code skeleton provided in `Hint 2:`.\n\n<details>\n  <summary>**Hint 1:**</summary>\nGES is conceptually very simple:\n\n* You start with the empty ensemble and add the model that has highest validation performance.\n* Then, you check for each model what the validation performance of the ensemble would be if you add that model to the ensemble.\n* To calculate the weights for each model, you simply count the number of the times the model has been added to the ensemble so far and divide it by the total number of models added.\n* Finally, to calculate the probability predictions of the ensemble, you perform weighted model averaging as usual.\n* You repeat this until a given number of iterations has been reached.\n\n</details>\n\n<details>\n  <summary>**Hint 2:**</summary>\n \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nouter_split = rsmp(\"holdout\")$instantiate(task)\n\n#########################################################################################\n### old code part from previous exercise using CMA-ES to numerically optimize the weights\n### modified to work with the newly introduced outer split\ndt = lrn(\"classif.rpart\")\ndt$predict_type = \"prob\"\nkknn = lrn(\"classif.kknn\", k = 7L)\nkknn$predict_type = \"prob\"\nlog_reg = lrn(\"classif.log_reg\")\nlog_reg$predict_type = \"prob\"\nfeatureless = lrn(\"classif.featureless\")\nfeatureless$predict_type = \"prob\"\n\ngr = gunion(list(dt, kknn, log_reg)) %>>% po(\"classifavg\")\ngrl = as_learner(gr)\n\n# optimize weights on the train/validation split from the outer_split\ntrain_valid_task = task$clone(deep = TRUE)$filter(outer_split$train_set(1L))\nk = 10L\nresampling = rsmp(\"cv\", folds = k)$instantiate(train_valid_task)\n\ndt_pred = resample(train_valid_task, dt, resampling)\nkknn_pred = resample(train_valid_task, kknn, resampling)\nlog_reg_pred = resample(train_valid_task, log_reg, resampling)\n\nobjective_function = function(xs) {\n  weights = unlist(xs)\n  weights = weights / sum(weights)  # sum to 1 normalization\n  aucs = map_dbl(seq_len(k), function(fold) {\n    dt_p = dt_pred$predictions()[[fold]]\n    kknn_p = kknn_pred$predictions()[[fold]]\n    log_reg_p = log_reg_pred$predictions()[[fold]]\n    row_ids = dt_p$row_ids\n    stopifnot(all(row_ids == kknn_p$row_ids) && all(row_ids == log_reg_p$row_ids))\n    truth = dt_p$truth\n    weighted_probs = Reduce(\"+\", list(dt_p$prob * weights[1L], kknn_p$prob * weights[2L], log_reg_p$prob * weights[3L]))\n    weighted_response = colnames(weighted_probs)[apply(weighted_probs, MARGIN = 1L, FUN = which.max)]\n    weighted_p = PredictionClassif$new(row_ids = row_ids, truth = truth, response = weighted_response, prob = weighted_probs)\n    weighted_p$score(msr(\"classif.auc\"))\n  })\n  list(classif.auc = mean(aucs), weights = list(weights))\n}\n\ndomain = ps(w_dt = p_dbl(0, 1), w_kknn = p_dbl(0, 1), w_log_reg = p_dbl(0, 1))\ncodomain = ps(classif.auc = p_dbl(0.5, 1, tags = \"maximize\"))\n\nobjective = ObjectiveRFun$new(\n  fun = objective_function,\n  domain = domain,\n  codomain = codomain,\n  id = \"optimize_grl_weights_cmaes\"\n)\n\ninstance = OptimInstanceSingleCrit$new(\n  objective = objective,\n  terminator = trm(\"evals\", n_evals = 100L)\n)\n\noptimizer = opt(\"cmaes\")\noptimizer$optimize(instance)\n\n# configure the ensemble with the optimized weights and evaluate on the outer split\ngrl_weights_optimized_cmaes = grl$clone(deep = TRUE)\ngrl_weights_optimized_cmaes$param_set$set_values(.values = list(classifavg.weights = instance$archive$best()$weights[[1L]]))\ngrl_weights_optimized_cmaes$id = paste0(grl_weights_optimized_cmaes$id, \".optimized_cmaes\")\n#########################################################################################\n\n#########################################################################################\n### GES implementation\n# selected is an integer vector of length t where t is the current iteration within GES\n# learner_num_ids is an integer vector from 1, ..., M where M is the number of models\n# get_ges_weights should calculate the weights for each model based on the number of times is has been selected\nget_ges_weights = function(selected, learner_num_ids) {\n  ...\n  weights\n}\n\n# learner_preds is a list of the resampled learner predictions, e.g., list(dt_pred, kknn_pred, log_reg_pred)\n# iterations is an integer specifying the number of iterations GES should be performed\n# measure is the measure used to score the predictions\nges = function(learner_preds, iterations = 100L, measure = msr(\"classif.auc\")) {\n  iteration = 0\n  learner_num_ids = seq_along(learner_preds)\n  performance = numeric(iterations)\n  selected = integer(iterations)\n  for (iteration in seq_len(iterations)) {\n    cat(\"Iteration: \", iteration, \"\\n\")\n    performance_tmp = map_dbl(learner_num_ids, function(learner_num_id) {\n      # for each model: add it to the ensemble and calculate the average validation performance of the k folds by performing model averaging\n      # use get_ges_weights to calculate the weights for each model\n      selected_tmp = selected\n      selected_tmp[iteration] = learner_num_id\n      weights = get_ges_weights(...)\n      performances = map_dbl(seq_len(k), function(fold) {\n        # similar steps as in the ObjectiveRFun we constructed to optimize the weights numerically with CMA-ES\n        ...\n      })\n      mean(performances)\n    })\n    cat(\"Performance if learner added: \", round(performance_tmp, 3), \"\\n\")\n    if (!measure$minimize) {\n      performance_tmp = - performance_tmp\n    }\n    select = ... # best model if added to the ensemble\n    performance[iteration] = performance_tmp[select]\n    selected[iteration] = select\n  }\n  best_iteration = which.min(performance)\n  weights = get_ges_weights(selected[seq_len(best_iteration)], learner_num_ids = learner_num_ids)\n  if (!measure$minimize) {\n    performance = - performance\n  }\n  list(best_iteration = best_iteration, performance_best = performance[best_iteration], weights = weights, selected = selected, performance = performance)\n}\n\nges_results = ges(list(dt_pred, kknn_pred, log_reg_pred))\n\n# configure the ensemble with the optimized weights and evaluate on the outer split\ngrl_weights_optimized_ges = grl$clone(deep = TRUE)\ngrl_weights_optimized_ges$param_set$set_values(.values = list(classifavg.weights = ...))\ngrl_weights_optimized_ges$id = paste0(grl_weights_optimized_ges$id, \".optimized_cmaes\")\n#########################################################################################\n\nbg = benchmark_grid(task, list(grl, grl_weights_optimized_cmaes, grl_weights_optimized_ges, dt, kknn, log_reg, featureless), outer_split)\nb = benchmark(bg)\nb$aggregate(msr(\"classif.auc\"))\n\n# compare the weights\ngrl_weights_optimized_cmaes$param_set$get_values()[[\"classifavg.weights\"]]\ngrl_weights_optimized_ges$param_set$get_values()[[\"classifavg.weights\"]]\n```\n:::\n\n\n</details>\n\n:::{.callout-note collapse=\"true\"}\n\n### Solution\n\n:::{.b64-solution}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nouter_split = rsmp(\"holdout\")$instantiate(task)\n\n#########################################################################################\n### old code part from previous exercise using CMA-ES to numerically optimize the weights\n### modified to work with the newly introduced outer split\ndt = lrn(\"classif.rpart\")\ndt$predict_type = \"prob\"\nkknn = lrn(\"classif.kknn\", k = 7L)\nkknn$predict_type = \"prob\"\nlog_reg = lrn(\"classif.log_reg\")\nlog_reg$predict_type = \"prob\"\nfeatureless = lrn(\"classif.featureless\")\nfeatureless$predict_type = \"prob\"\n\ngr = gunion(list(dt, kknn, log_reg)) %>>% po(\"classifavg\")\ngrl = as_learner(gr)\n\n# optimize weights on the train/validation split from the outer_split\ntrain_valid_task = task$clone(deep = TRUE)$filter(outer_split$train_set(1L))\nk = 10L\nresampling = rsmp(\"cv\", folds = k)$instantiate(train_valid_task)\n\ndt_pred = resample(train_valid_task, dt, resampling)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:02.819] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/10)\nINFO  [18:06:02.940] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/10)\nINFO  [18:06:03.043] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/10)\nINFO  [18:06:03.144] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 4/10)\nINFO  [18:06:03.244] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 5/10)\nINFO  [18:06:03.344] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 6/10)\nINFO  [18:06:03.443] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 7/10)\nINFO  [18:06:03.561] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 8/10)\nINFO  [18:06:03.663] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 9/10)\nINFO  [18:06:03.764] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 10/10)\n```\n\n\n:::\n\n```{.r .cell-code}\nkknn_pred = resample(train_valid_task, kknn, resampling)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:03.871] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/10)\nINFO  [18:06:03.911] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/10)\nINFO  [18:06:03.952] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/10)\nINFO  [18:06:04.000] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 4/10)\nINFO  [18:06:04.044] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 5/10)\nINFO  [18:06:04.107] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 6/10)\nINFO  [18:06:04.170] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 7/10)\nINFO  [18:06:04.229] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 8/10)\nINFO  [18:06:04.297] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 9/10)\nINFO  [18:06:04.351] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 10/10)\n```\n\n\n:::\n\n```{.r .cell-code}\nlog_reg_pred = resample(train_valid_task, log_reg, resampling)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:04.796] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 1/10)\nINFO  [18:06:04.826] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 2/10)\nINFO  [18:06:04.855] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 3/10)\nINFO  [18:06:04.885] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 4/10)\nINFO  [18:06:04.914] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 5/10)\nINFO  [18:06:04.943] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 6/10)\nINFO  [18:06:04.974] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 7/10)\nINFO  [18:06:05.004] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 8/10)\nINFO  [18:06:05.033] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 9/10)\nINFO  [18:06:05.063] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 10/10)\n```\n\n\n:::\n\n```{.r .cell-code}\nobjective_function = function(xs) {\n  weights = unlist(xs)\n  weights = weights / sum(weights)  # sum to 1 normalization\n  aucs = map_dbl(seq_len(k), function(fold) {\n    dt_p = dt_pred$predictions()[[fold]]\n    kknn_p = kknn_pred$predictions()[[fold]]\n    log_reg_p = log_reg_pred$predictions()[[fold]]\n    row_ids = dt_p$row_ids\n    stopifnot(all(row_ids == kknn_p$row_ids) && all(row_ids == log_reg_p$row_ids))\n    truth = dt_p$truth\n    weighted_probs = Reduce(\"+\", list(dt_p$prob * weights[1L], kknn_p$prob * weights[2L], log_reg_p$prob * weights[3L]))\n    weighted_response = colnames(weighted_probs)[apply(weighted_probs, MARGIN = 1L, FUN = which.max)]\n    weighted_p = PredictionClassif$new(row_ids = row_ids, truth = truth, response = weighted_response, prob = weighted_probs)\n    weighted_p$score(msr(\"classif.auc\"))\n  })\n  list(classif.auc = mean(aucs), weights = list(weights))\n}\n\ndomain = ps(w_dt = p_dbl(0, 1), w_kknn = p_dbl(0, 1), w_log_reg = p_dbl(0, 1))\ncodomain = ps(classif.auc = p_dbl(0.5, 1, tags = \"maximize\"))\n\nobjective = ObjectiveRFun$new(\n  fun = objective_function,\n  domain = domain,\n  codomain = codomain,\n  id = \"optimize_grl_weights_cmaes\"\n)\n\ninstance = OptimInstanceSingleCrit$new(\n  objective = objective,\n  terminator = trm(\"evals\", n_evals = 100L)\n)\n\noptimizer = opt(\"cmaes\")\noptimizer$optimize(instance)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:05.125] [bbotk] Starting to optimize 3 parameter(s) with '<OptimizerBatchCmaes>' and '<TerminatorEvals> [n_evals=100, k=0]'\nINFO  [18:06:05.145] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.214] [bbotk] Result of batch 1:\nINFO  [18:06:05.215] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.215] [bbotk]  0.8507093 0.1932078 0.2035172   0.7673465 0.6819672,0.1548842,0.1631487\nINFO  [18:06:05.217] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.272] [bbotk] Result of batch 2:\nINFO  [18:06:05.275] [bbotk]  w_dt    w_kknn  w_log_reg classif.auc                          weights\nINFO  [18:06:05.275] [bbotk]     1 0.7183427 0.05479259   0.7464218 0.56397275,0.40512572,0.03090153\nINFO  [18:06:05.276] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.332] [bbotk] Result of batch 3:\nINFO  [18:06:05.333] [bbotk]  w_dt   w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.333] [bbotk]     1 0.378203         1   0.7776643 0.4204855,0.1590289,0.4204855\nINFO  [18:06:05.335] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.390] [bbotk] Result of batch 4:\nINFO  [18:06:05.391] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.391] [bbotk]     0 0.4919782         1    0.767595 0.0000000,0.3297489,0.6702511\nINFO  [18:06:05.392] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.447] [bbotk] Result of batch 5:\nINFO  [18:06:05.448] [bbotk]  w_dt    w_kknn  w_log_reg classif.auc                          weights\nINFO  [18:06:05.448] [bbotk]     1 0.7846233 0.08715346   0.7492684 0.53425174,0.41918637,0.04656189\nINFO  [18:06:05.450] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.505] [bbotk] Result of batch 6:\nINFO  [18:06:05.505] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.505] [bbotk]     1 0.8613353 0.6199627    0.766105 0.4030149,0.3471309,0.2498542\nINFO  [18:06:05.507] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.561] [bbotk] Result of batch 7:\nINFO  [18:06:05.561] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.561] [bbotk]  0.1851151 0.6639796 0.1490341   0.7439939 0.1854622,0.6652244,0.1493135\nINFO  [18:06:05.564] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.618] [bbotk] Result of batch 8:\nINFO  [18:06:05.619] [bbotk]       w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.619] [bbotk]  0.1712181      0         1   0.7694166 0.1461881,0.0000000,0.8538119\nINFO  [18:06:05.620] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.682] [bbotk] Result of batch 9:\nINFO  [18:06:05.683] [bbotk]       w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.683] [bbotk]  0.8666073      0 0.8239799   0.7732813 0.5126073,0.0000000,0.4873927\nINFO  [18:06:05.684] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.739] [bbotk] Result of batch 10:\nINFO  [18:06:05.740] [bbotk]       w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.740] [bbotk]  0.7432431      1 0.8122322   0.7670952 0.2908434,0.3913166,0.3178400\nINFO  [18:06:05.742] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.797] [bbotk] Result of batch 11:\nINFO  [18:06:05.798] [bbotk]       w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.798] [bbotk]  0.7773379      0 0.2541798   0.7706042 0.7535866,0.0000000,0.2464134\nINFO  [18:06:05.799] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.856] [bbotk] Result of batch 12:\nINFO  [18:06:05.856] [bbotk]       w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:05.856] [bbotk]  0.7330351      0         1   0.7717712 0.4229777,0.0000000,0.5770223\nINFO  [18:06:05.858] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.913] [bbotk] Result of batch 13:\nINFO  [18:06:05.914] [bbotk]       w_dt     w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:05.914] [bbotk]  0.6846041 0.06031726 0.5480968   0.7756899 0.52946208,0.04664842,0.42388950\nINFO  [18:06:05.915] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:05.970] [bbotk] Result of batch 14:\nINFO  [18:06:05.970] [bbotk]       w_dt w_kknn w_log_reg classif.auc                    weights\nINFO  [18:06:05.970] [bbotk]  0.6448344      0 0.9587767   0.7719635 0.402114,0.000000,0.597886\nINFO  [18:06:05.972] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.026] [bbotk] Result of batch 15:\nINFO  [18:06:06.027] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.027] [bbotk]     1 0.7373433         1   0.7732239 0.3653177,0.2693646,0.3653177\nINFO  [18:06:06.028] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.083] [bbotk] Result of batch 16:\nINFO  [18:06:06.083] [bbotk]       w_dt w_kknn w_log_reg classif.auc                    weights\nINFO  [18:06:06.083] [bbotk]  0.9205911      0         1   0.7736543 0.479327,0.000000,0.520673\nINFO  [18:06:06.085] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.139] [bbotk] Result of batch 17:\nINFO  [18:06:06.140] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.140] [bbotk]  0.9823961 0.8086256         1   0.7726105 0.3519844,0.2897239,0.3582917\nINFO  [18:06:06.142] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.196] [bbotk] Result of batch 18:\nINFO  [18:06:06.196] [bbotk]  w_dt    w_kknn  w_log_reg classif.auc                          weights\nINFO  [18:06:06.196] [bbotk]     1 0.1373067 0.07471489   0.7586362 0.82506778,0.11328737,0.06164485\nINFO  [18:06:06.200] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.256] [bbotk] Result of batch 19:\nINFO  [18:06:06.257] [bbotk]       w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.257] [bbotk]  0.2608672      0         1   0.7699731 0.2068951,0.0000000,0.7931049\nINFO  [18:06:06.259] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.313] [bbotk] Result of batch 20:\nINFO  [18:06:06.314] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.314] [bbotk]  0.1242391 0.1403457 0.8756898   0.7727529 0.1089554,0.1230806,0.7679640\nINFO  [18:06:06.316] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.371] [bbotk] Result of batch 21:\nINFO  [18:06:06.371] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:06.371] [bbotk]     1 0.1568928 0.7628414   0.7758323 0.52090546,0.08172629,0.39736825\nINFO  [18:06:06.373] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.428] [bbotk] Result of batch 22:\nINFO  [18:06:06.429] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.429] [bbotk]     1 0.3583327         1   0.7779917 0.4240284,0.1519432,0.4240284\nINFO  [18:06:06.431] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.487] [bbotk] Result of batch 23:\nINFO  [18:06:06.488] [bbotk]  w_dt w_kknn w_log_reg classif.auc     weights\nINFO  [18:06:06.488] [bbotk]     1      0         1   0.7732648 0.5,0.0,0.5\nINFO  [18:06:06.489] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.546] [bbotk] Result of batch 24:\nINFO  [18:06:06.547] [bbotk]       w_dt     w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:06.547] [bbotk]  0.5957732 0.03986684 0.3046448   0.7715646 0.63360931,0.04239868,0.32399201\nINFO  [18:06:06.550] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.605] [bbotk] Result of batch 25:\nINFO  [18:06:06.605] [bbotk]  w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.605] [bbotk]     1      0 0.6491682   0.7716676 0.6063663,0.0000000,0.3936337\nINFO  [18:06:06.607] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.660] [bbotk] Result of batch 26:\nINFO  [18:06:06.661] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.661] [bbotk]     1 0.6894953 0.8010365   0.7715393 0.4015207,0.2768466,0.3216327\nINFO  [18:06:06.663] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.715] [bbotk] Result of batch 27:\nINFO  [18:06:06.716] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.716] [bbotk]  0.9021229 0.2507555         1    0.777355 0.4190311,0.1164745,0.4644944\nINFO  [18:06:06.718] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.771] [bbotk] Result of batch 28:\nINFO  [18:06:06.771] [bbotk]       w_dt      w_kknn w_log_reg classif.auc                             weights\nINFO  [18:06:06.771] [bbotk]  0.9264411 0.008535531 0.2228642   0.7670729 0.800145487,0.007371938,0.192482575\nINFO  [18:06:06.773] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.873] [bbotk] Result of batch 29:\nINFO  [18:06:06.874] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                    weights\nINFO  [18:06:06.874] [bbotk]     1 0.5629458         1    0.775136 0.390176,0.219648,0.390176\nINFO  [18:06:06.875] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.931] [bbotk] Result of batch 30:\nINFO  [18:06:06.931] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.931] [bbotk]  0.9324817 0.2210078 0.6858267   0.7756691 0.5069720,0.1201576,0.3728705\nINFO  [18:06:06.933] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:06.986] [bbotk] Result of batch 31:\nINFO  [18:06:06.987] [bbotk]  w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:06.987] [bbotk]     1      0 0.9380229   0.7732813 0.5159898,0.0000000,0.4840102\nINFO  [18:06:06.988] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.042] [bbotk] Result of batch 32:\nINFO  [18:06:07.043] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:07.043] [bbotk]     1 0.0711904         1   0.7741532 0.48281413,0.03437173,0.48281413\nINFO  [18:06:07.044] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.097] [bbotk] Result of batch 33:\nINFO  [18:06:07.098] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.098] [bbotk]     1 0.2601415         1   0.7769334 0.4424502,0.1150996,0.4424502\nINFO  [18:06:07.100] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.152] [bbotk] Result of batch 34:\nINFO  [18:06:07.153] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.153] [bbotk]  0.9807971 0.3120411 0.3403895    0.769759 0.6005268,0.1910579,0.2084152\nINFO  [18:06:07.155] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.207] [bbotk] Result of batch 35:\nINFO  [18:06:07.208] [bbotk]      w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.208] [bbotk]  0.480271      0 0.7992697   0.7732777 0.3753464,0.0000000,0.6246536\nINFO  [18:06:07.210] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.262] [bbotk] Result of batch 36:\nINFO  [18:06:07.263] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.263] [bbotk]  0.6354862 0.3271584 0.8729164   0.7765249 0.3462082,0.1782335,0.4755584\nINFO  [18:06:07.264] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.317] [bbotk] Result of batch 37:\nINFO  [18:06:07.317] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.317] [bbotk]     1 0.3520525 0.8138831   0.7766642 0.4616942,0.1625406,0.3757652\nINFO  [18:06:07.319] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.371] [bbotk] Result of batch 38:\nINFO  [18:06:07.372] [bbotk]      w_dt w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.372] [bbotk]  0.853665      0         1   0.7725437 0.4605282,0.0000000,0.5394718\nINFO  [18:06:07.374] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.426] [bbotk] Result of batch 39:\nINFO  [18:06:07.427] [bbotk]  w_dt w_kknn w_log_reg classif.auc     weights\nINFO  [18:06:07.427] [bbotk]     1      0         1   0.7732648 0.5,0.0,0.5\nINFO  [18:06:07.429] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.481] [bbotk] Result of batch 40:\nINFO  [18:06:07.482] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.482] [bbotk]  0.9950107 0.4204689 0.5155151   0.7727442 0.5152840,0.2177473,0.2669687\nINFO  [18:06:07.484] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.536] [bbotk] Result of batch 41:\nINFO  [18:06:07.537] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.537] [bbotk]  0.6669866 0.1054284         1   0.7757258 0.3763151,0.0594829,0.5642020\nINFO  [18:06:07.539] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.591] [bbotk] Result of batch 42:\nINFO  [18:06:07.592] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.592] [bbotk]  0.8358949 0.7263475         1   0.7722204 0.3262357,0.2834812,0.3902831\nINFO  [18:06:07.594] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.647] [bbotk] Result of batch 43:\nINFO  [18:06:07.648] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.648] [bbotk]  0.9854567 0.2908623 0.8232894   0.7756426 0.4693526,0.1385317,0.3921157\nINFO  [18:06:07.649] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.701] [bbotk] Result of batch 44:\nINFO  [18:06:07.701] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.701] [bbotk]  0.7041476 0.2447189 0.7504259   0.7767579 0.4143769,0.1440122,0.4416108\nINFO  [18:06:07.703] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.754] [bbotk] Result of batch 45:\nINFO  [18:06:07.755] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.755] [bbotk]  0.6145731 0.5950045 0.7826008   0.7721043 0.3084930,0.2986703,0.3928367\nINFO  [18:06:07.757] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.808] [bbotk] Result of batch 46:\nINFO  [18:06:07.809] [bbotk]      w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.809] [bbotk]  0.914955 0.3669374         1   0.7769118 0.4009633,0.1608040,0.4382328\nINFO  [18:06:07.810] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.861] [bbotk] Result of batch 47:\nINFO  [18:06:07.862] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.862] [bbotk]  0.6530657 0.4842513 0.8535067   0.7743597 0.3280379,0.2432417,0.4287204\nINFO  [18:06:07.863] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.914] [bbotk] Result of batch 48:\nINFO  [18:06:07.915] [bbotk]       w_dt     w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:07.915] [bbotk]  0.8749898 0.06597607         1   0.7725541 0.45080123,0.03399136,0.51520741\nINFO  [18:06:07.916] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:07.973] [bbotk] Result of batch 49:\nINFO  [18:06:07.974] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:07.974] [bbotk]     1 0.4405759 0.7633825   0.7731504 0.4537291,0.1999021,0.3463688\nINFO  [18:06:07.976] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.030] [bbotk] Result of batch 50:\nINFO  [18:06:08.031] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.031] [bbotk]     1 0.3606797         1   0.7780238 0.4236068,0.1527864,0.4236068\nINFO  [18:06:08.032] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.084] [bbotk] Result of batch 51:\nINFO  [18:06:08.085] [bbotk]       w_dt   w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.085] [bbotk]  0.9946365 0.447395 0.9441113   0.7763222 0.4168386,0.1874972,0.3956642\nINFO  [18:06:08.086] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.138] [bbotk] Result of batch 52:\nINFO  [18:06:08.138] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.138] [bbotk]  0.7430357 0.3631349         1   0.7769922 0.3527899,0.1724148,0.4747954\nINFO  [18:06:08.140] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.191] [bbotk] Result of batch 53:\nINFO  [18:06:08.192] [bbotk]       w_dt     w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:08.192] [bbotk]  0.8057162 0.08600873 0.9378308   0.7735543 0.44038899,0.04701072,0.51260030\nINFO  [18:06:08.194] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.244] [bbotk] Result of batch 54:\nINFO  [18:06:08.245] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.245] [bbotk]     1 0.2999886 0.7383706   0.7766531 0.4905907,0.1471716,0.3622377\nINFO  [18:06:08.247] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.298] [bbotk] Result of batch 55:\nINFO  [18:06:08.298] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.298] [bbotk]  0.9321129 0.1793952 0.6148633   0.7753364 0.5399260,0.1039146,0.3561593\nINFO  [18:06:08.300] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.351] [bbotk] Result of batch 56:\nINFO  [18:06:08.352] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.352] [bbotk]  0.9803344 0.2815126 0.7687104    0.776099 0.4827908,0.1386381,0.3785711\nINFO  [18:06:08.354] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.405] [bbotk] Result of batch 57:\nINFO  [18:06:08.406] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.406] [bbotk]  0.8255311 0.4200566 0.9212535   0.7766088 0.3809837,0.1938567,0.4251597\nINFO  [18:06:08.407] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.462] [bbotk] Result of batch 58:\nINFO  [18:06:08.462] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.462] [bbotk]  0.7868151 0.2190445 0.9065554   0.7773503 0.4114249,0.1145382,0.4740370\nINFO  [18:06:08.464] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.517] [bbotk] Result of batch 59:\nINFO  [18:06:08.517] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.517] [bbotk]  0.9829769 0.4605513 0.9919542   0.7759603 0.4036066,0.1891006,0.4072927\nINFO  [18:06:08.519] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.571] [bbotk] Result of batch 60:\nINFO  [18:06:08.572] [bbotk]  w_dt   w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.572] [bbotk]     1 0.274587 0.9493256   0.7759427 0.4496579,0.1234702,0.4268718\nINFO  [18:06:08.574] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.626] [bbotk] Result of batch 61:\nINFO  [18:06:08.627] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.627] [bbotk]  0.8656248 0.5771385         1   0.7745856 0.3543630,0.2362646,0.4093724\nINFO  [18:06:08.628] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.680] [bbotk] Result of batch 62:\nINFO  [18:06:08.681] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.681] [bbotk]  0.5689977 0.3571961 0.9255437   0.7759856 0.3072777,0.1928978,0.4998245\nINFO  [18:06:08.683] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.735] [bbotk] Result of batch 63:\nINFO  [18:06:08.736] [bbotk]  w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.736] [bbotk]     1 0.3494978 0.9641513   0.7783169 0.4322177,0.1510591,0.4167232\nINFO  [18:06:08.737] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.790] [bbotk] Result of batch 64:\nINFO  [18:06:08.790] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.790] [bbotk]  0.9360161 0.3417135 0.8781068   0.7780786 0.4341777,0.1585062,0.4073161\nINFO  [18:06:08.792] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.844] [bbotk] Result of batch 65:\nINFO  [18:06:08.845] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.845] [bbotk]  0.8914479 0.2531356         1   0.7776538 0.4156741,0.1180349,0.4662910\nINFO  [18:06:08.847] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.902] [bbotk] Result of batch 66:\nINFO  [18:06:08.903] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.903] [bbotk]  0.9633517 0.3977517 0.9182148   0.7768515 0.4226491,0.1745047,0.4028463\nINFO  [18:06:08.904] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:08.957] [bbotk] Result of batch 67:\nINFO  [18:06:08.957] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:08.957] [bbotk]  0.8216024 0.3882225 0.8957406   0.7767996 0.3902051,0.1843792,0.4254157\nINFO  [18:06:08.959] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.011] [bbotk] Result of batch 68:\nINFO  [18:06:09.011] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.011] [bbotk]  0.9671755 0.3462645         1   0.7773954 0.4180681,0.1496752,0.4322567\nINFO  [18:06:09.013] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.067] [bbotk] Result of batch 69:\nINFO  [18:06:09.068] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.068] [bbotk]  0.8946805 0.3019664 0.9367195   0.7776268 0.4193750,0.1415446,0.4390804\nINFO  [18:06:09.069] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.121] [bbotk] Result of batch 70:\nINFO  [18:06:09.121] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.121] [bbotk]  0.8973036 0.3508324         1   0.7768239 0.3991323,0.1560548,0.4448129\nINFO  [18:06:09.123] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.175] [bbotk] Result of batch 71:\nINFO  [18:06:09.176] [bbotk]  w_dt   w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.176] [bbotk]     1 0.446756 0.9357135    0.776592 0.4197326,0.1875180,0.3927494\nINFO  [18:06:09.178] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.230] [bbotk] Result of batch 72:\nINFO  [18:06:09.232] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.232] [bbotk]  0.8656051 0.2718177 0.8202465   0.7764169 0.4421610,0.1388476,0.4189914\nINFO  [18:06:09.234] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.287] [bbotk] Result of batch 73:\nINFO  [18:06:09.287] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.287] [bbotk]  0.8644379 0.3693661 0.7879568   0.7760367 0.4275669,0.1826953,0.3897379\nINFO  [18:06:09.289] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.343] [bbotk] Result of batch 74:\nINFO  [18:06:09.343] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.343] [bbotk]  0.9300413 0.2169834 0.8788978    0.776033 0.4590705,0.1071035,0.4338260\nINFO  [18:06:09.345] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.399] [bbotk] Result of batch 75:\nINFO  [18:06:09.400] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                          weights\nINFO  [18:06:09.400] [bbotk]  0.9939944 0.2116051 0.9507728   0.7757555 0.46095677,0.09813013,0.44091310\nINFO  [18:06:09.401] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.455] [bbotk] Result of batch 76:\nINFO  [18:06:09.455] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.455] [bbotk]  0.8878053 0.3365778  0.938756   0.7776439 0.4104245,0.1555969,0.4339786\nINFO  [18:06:09.457] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.510] [bbotk] Result of batch 77:\nINFO  [18:06:09.511] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.511] [bbotk]  0.9089204 0.2212915 0.8351589   0.7760434 0.4624676,0.1125953,0.4249371\nINFO  [18:06:09.513] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.565] [bbotk] Result of batch 78:\nINFO  [18:06:09.566] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.566] [bbotk]  0.9067772 0.2503882 0.9525026   0.7771107 0.4298198,0.1186861,0.4514941\nINFO  [18:06:09.568] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.620] [bbotk] Result of batch 79:\nINFO  [18:06:09.621] [bbotk]      w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.621] [bbotk]  0.893781 0.2795435 0.9177247   0.7769675 0.4274319,0.1336858,0.4388824\nINFO  [18:06:09.623] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.676] [bbotk] Result of batch 80:\nINFO  [18:06:09.676] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.676] [bbotk]  0.8709208 0.3308848 0.9466336   0.7767767 0.4053737,0.1540117,0.4406146\nINFO  [18:06:09.678] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.730] [bbotk] Result of batch 81:\nINFO  [18:06:09.731] [bbotk]       w_dt   w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.731] [bbotk]  0.9079241 0.376183 0.8648798   0.7768515 0.4224893,0.1750513,0.4024593\nINFO  [18:06:09.733] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.786] [bbotk] Result of batch 82:\nINFO  [18:06:09.786] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.786] [bbotk]  0.9477282 0.3987352 0.9268214   0.7766134 0.4168981,0.1754005,0.4077014\nINFO  [18:06:09.788] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.843] [bbotk] Result of batch 83:\nINFO  [18:06:09.844] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.844] [bbotk]  0.9116735 0.3895322 0.9036239   0.7770218 0.4134893,0.1766722,0.4098384\nINFO  [18:06:09.846] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.898] [bbotk] Result of batch 84:\nINFO  [18:06:09.899] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.899] [bbotk]  0.8923375 0.4013695  0.918427   0.7764684 0.4033831,0.1814400,0.4151769\nINFO  [18:06:09.901] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:09.952] [bbotk] Result of batch 85:\nINFO  [18:06:09.953] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:09.953] [bbotk]  0.9298132 0.2518819 0.9355167   0.7764074 0.4391687,0.1189687,0.4418626\nINFO  [18:06:09.955] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.007] [bbotk] Result of batch 86:\nINFO  [18:06:10.007] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.007] [bbotk]  0.9662026 0.3032398 0.9844576   0.7766556 0.4286803,0.1345400,0.4367796\nINFO  [18:06:10.011] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.063] [bbotk] Result of batch 87:\nINFO  [18:06:10.064] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.064] [bbotk]  0.9285962 0.3069628 0.8849976    0.776969 0.4379021,0.1447558,0.4173421\nINFO  [18:06:10.066] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.122] [bbotk] Result of batch 88:\nINFO  [18:06:10.123] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.123] [bbotk]  0.8986112 0.3945129 0.8565752   0.7765519 0.4180172,0.1835200,0.3984628\nINFO  [18:06:10.125] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.180] [bbotk] Result of batch 89:\nINFO  [18:06:10.181] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.181] [bbotk]  0.8500885 0.3196216 0.9436561   0.7770262 0.4022438,0.1512381,0.4465180\nINFO  [18:06:10.183] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.235] [bbotk] Result of batch 90:\nINFO  [18:06:10.236] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.236] [bbotk]  0.8965266 0.3483977 0.9582474    0.777365 0.4069254,0.1581346,0.4349399\nINFO  [18:06:10.237] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.289] [bbotk] Result of batch 91:\nINFO  [18:06:10.290] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.290] [bbotk]  0.9644363 0.3380782  0.961574   0.7778892 0.4259711,0.1493220,0.4247069\nINFO  [18:06:10.291] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.344] [bbotk] Result of batch 92:\nINFO  [18:06:10.345] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.345] [bbotk]  0.9259824 0.4328598 0.9635539   0.7764377 0.3987185,0.1863850,0.4148965\nINFO  [18:06:10.346] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.399] [bbotk] Result of batch 93:\nINFO  [18:06:10.400] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.400] [bbotk]  0.9635745 0.4173407 0.9183195   0.7766696 0.4190849,0.1815129,0.3994023\nINFO  [18:06:10.402] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.458] [bbotk] Result of batch 94:\nINFO  [18:06:10.458] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.458] [bbotk]  0.9598477 0.3883425 0.8993884   0.7769881 0.4270586,0.1727826,0.4001588\nINFO  [18:06:10.460] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.512] [bbotk] Result of batch 95:\nINFO  [18:06:10.513] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.513] [bbotk]  0.9177691 0.2884235 0.9159268    0.776656 0.4324776,0.1359130,0.4316094\nINFO  [18:06:10.514] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.566] [bbotk] Result of batch 96:\nINFO  [18:06:10.566] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.566] [bbotk]  0.9490608 0.3160247 0.9936743    0.777389 0.4201690,0.1399107,0.4399203\nINFO  [18:06:10.568] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.619] [bbotk] Result of batch 97:\nINFO  [18:06:10.619] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.619] [bbotk]  0.9120465 0.3616593 0.9455288   0.7776633 0.4109735,0.1629658,0.4260608\nINFO  [18:06:10.621] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.672] [bbotk] Result of batch 98:\nINFO  [18:06:10.672] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.672] [bbotk]  0.9353862 0.3973623 0.9774207   0.7770179 0.4048994,0.1720057,0.4230949\nINFO  [18:06:10.674] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.725] [bbotk] Result of batch 99:\nINFO  [18:06:10.725] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.725] [bbotk]  0.9348322 0.3144206   0.94156   0.7773479 0.4267057,0.1435178,0.4297766\nINFO  [18:06:10.727] [bbotk] Evaluating 1 configuration(s)\nINFO  [18:06:10.778] [bbotk] Result of batch 100:\nINFO  [18:06:10.779] [bbotk]       w_dt    w_kknn w_log_reg classif.auc                       weights\nINFO  [18:06:10.779] [bbotk]  0.8993329 0.4100669 0.9041176   0.7762779 0.4062913,0.1852558,0.4084529\nINFO  [18:06:10.784] [bbotk] Finished optimizing after 100 evaluation(s)\nINFO  [18:06:10.784] [bbotk] Result:\nINFO  [18:06:10.786] [bbotk]   w_dt    w_kknn w_log_reg  x_domain classif.auc\nINFO  [18:06:10.786] [bbotk]  <num>     <num>     <num>    <list>       <num>\nINFO  [18:06:10.786] [bbotk]      1 0.3494978 0.9641513 <list[3]>   0.7783169\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    w_dt    w_kknn w_log_reg  x_domain classif.auc\n   <num>     <num>     <num>    <list>       <num>\n1:     1 0.3494978 0.9641513 <list[3]>   0.7783169\n```\n\n\n:::\n\n```{.r .cell-code}\n# configure the ensemble with the optimized weights and evaluate on the outer split\ngrl_weights_optimized_cmaes = grl$clone(deep = TRUE)\ngrl_weights_optimized_cmaes$param_set$set_values(.values = list(classifavg.weights = instance$archive$best()$weights[[1L]]))\ngrl_weights_optimized_cmaes$id = paste0(grl_weights_optimized_cmaes$id, \".optimized_cmaes\")\n#########################################################################################\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#########################################################################################\n### GES implementation\nget_ges_weights = function(selected, learner_num_ids) {\n  selected = selected[selected != 0]\n  n = length(selected)\n  weights = map_dbl(learner_num_ids, function(learner_num_id) {\n    sum(learner_num_id == selected) / n\n  })\n  weights\n}\n\nges = function(learner_preds, iterations = 100L, measure = msr(\"classif.auc\")) {\n  iteration = 0\n  learner_num_ids = seq_along(learner_preds)\n  performance = numeric(iterations)\n  selected = integer(iterations)\n  for (iteration in seq_len(iterations)) {\n    cat(\"Iteration: \", iteration, \"\\n\")\n    performance_tmp = map_dbl(learner_num_ids, function(learner_num_id) {\n      selected_tmp = selected\n      selected_tmp[iteration] = learner_num_id\n      weights = get_ges_weights(selected_tmp, learner_num_ids = learner_num_ids)\n      performances = map_dbl(seq_len(k), function(fold) {\n        learner_ps = map(learner_preds, function(learner_pred) learner_pred$predictions()[[fold]])\n        row_ids = learner_ps[[1L]]$row_ids\n        stopifnot(all(map_lgl(learner_ps[-1L], function(learner_p) all(learner_p$row_ids == row_ids))))\n        truth = learner_ps[[1L]]$truth\n        weighted_probs = Reduce(\"+\", mapply(FUN = function(prob, weight) prob * weight, map(learner_ps, function(learner_p) learner_p$prob), as.list(weights), SIMPLIFY = FALSE))\n        stopifnot(all.equal(rowSums(weighted_probs),  rep(1, nrow(weighted_probs))))\n        weighted_response = colnames(weighted_probs)[apply(weighted_probs, MARGIN = 1L, FUN = which.max)]\n        weighted_p = PredictionClassif$new(row_ids = row_ids, truth = truth, response = weighted_response, prob = weighted_probs)\n        weighted_p$score(measure)\n      })\n      mean(performances)\n    })\n    cat(\"Performance if learner added: \", round(performance_tmp, 3), \"\\n\")\n    if (!measure$minimize) {\n      performance_tmp = - performance_tmp\n    }\n    select = which.min(performance_tmp)\n    performance[iteration] = performance_tmp[select]\n    selected[iteration] = select\n  }\n  best_iteration = which.min(performance)\n  weights = get_ges_weights(selected[seq_len(best_iteration)], learner_num_ids = learner_num_ids)\n  if (!measure$minimize) {\n    performance = - performance\n  }\n  list(best_iteration = best_iteration, performance_best = performance[best_iteration], weights = weights, selected = selected, performance = performance)\n}\n\nges_results = ges(list(dt_pred, kknn_pred, log_reg_pred))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIteration:  1 \nPerformance if learner added:  0.715 0.695 0.759 \nIteration:  2 \nPerformance if learner added:  0.773 0.758 0.759 \nIteration:  3 \nPerformance if learner added:  0.772 0.771 0.773 \nIteration:  4 \nPerformance if learner added:  0.773 0.774 0.771 \nIteration:  5 \nPerformance if learner added:  0.776 0.769 0.775 \nIteration:  6 \nPerformance if learner added:  0.776 0.771 0.776 \nIteration:  7 \nPerformance if learner added:  0.778 0.773 0.778 \nIteration:  8 \nPerformance if learner added:  0.777 0.774 0.777 \nIteration:  9 \nPerformance if learner added:  0.777 0.776 0.777 \nIteration:  10 \nPerformance if learner added:  0.777 0.776 0.777 \nIteration:  11 \nPerformance if learner added:  0.776 0.777 0.776 \nIteration:  12 \nPerformance if learner added:  0.777 0.774 0.776 \nIteration:  13 \nPerformance if learner added:  0.776 0.775 0.776 \nIteration:  14 \nPerformance if learner added:  0.778 0.776 0.776 \nIteration:  15 \nPerformance if learner added:  0.776 0.776 0.776 \nIteration:  16 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  17 \nPerformance if learner added:  0.777 0.775 0.777 \nIteration:  18 \nPerformance if learner added:  0.776 0.775 0.777 \nIteration:  19 \nPerformance if learner added:  0.778 0.776 0.777 \nIteration:  20 \nPerformance if learner added:  0.776 0.776 0.777 \nIteration:  21 \nPerformance if learner added:  0.778 0.777 0.776 \nIteration:  22 \nPerformance if learner added:  0.776 0.776 0.777 \nIteration:  23 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  24 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  25 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  26 \nPerformance if learner added:  0.778 0.777 0.776 \nIteration:  27 \nPerformance if learner added:  0.777 0.776 0.777 \nIteration:  28 \nPerformance if learner added:  0.778 0.776 0.777 \nIteration:  29 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  30 \nPerformance if learner added:  0.777 0.777 0.776 \nIteration:  31 \nPerformance if learner added:  0.778 0.777 0.776 \nIteration:  32 \nPerformance if learner added:  0.777 0.776 0.777 \nIteration:  33 \nPerformance if learner added:  0.778 0.776 0.777 \nIteration:  34 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  35 \nPerformance if learner added:  0.776 0.777 0.778 \nIteration:  36 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  37 \nPerformance if learner added:  0.778 0.776 0.777 \nIteration:  38 \nPerformance if learner added:  0.776 0.776 0.778 \nIteration:  39 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  40 \nPerformance if learner added:  0.776 0.777 0.778 \nIteration:  41 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  42 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  43 \nPerformance if learner added:  0.776 0.778 0.777 \nIteration:  44 \nPerformance if learner added:  0.778 0.776 0.777 \nIteration:  45 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  46 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  47 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  48 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  49 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  50 \nPerformance if learner added:  0.777 0.778 0.777 \nIteration:  51 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  52 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  53 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  54 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  55 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  56 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  57 \nPerformance if learner added:  0.777 0.778 0.778 \nIteration:  58 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  59 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  60 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  61 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  62 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  63 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  64 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  65 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  66 \nPerformance if learner added:  0.778 0.778 0.777 \nIteration:  67 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  68 \nPerformance if learner added:  0.777 0.778 0.777 \nIteration:  69 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  70 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  71 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  72 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  73 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  74 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  75 \nPerformance if learner added:  0.777 0.777 0.777 \nIteration:  76 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  77 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  78 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  79 \nPerformance if learner added:  0.778 0.777 0.777 \nIteration:  80 \nPerformance if learner added:  0.777 0.778 0.778 \nIteration:  81 \nPerformance if learner added:  0.778 0.778 0.777 \nIteration:  82 \nPerformance if learner added:  0.777 0.778 0.777 \nIteration:  83 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  84 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  85 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  86 \nPerformance if learner added:  0.778 0.778 0.778 \nIteration:  87 \nPerformance if learner added:  0.777 0.778 0.778 \nIteration:  88 \nPerformance if learner added:  0.777 0.778 0.777 \nIteration:  89 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  90 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  91 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  92 \nPerformance if learner added:  0.778 0.778 0.778 \nIteration:  93 \nPerformance if learner added:  0.777 0.777 0.778 \nIteration:  94 \nPerformance if learner added:  0.778 0.778 0.778 \nIteration:  95 \nPerformance if learner added:  0.777 0.778 0.777 \nIteration:  96 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  97 \nPerformance if learner added:  0.778 0.778 0.778 \nIteration:  98 \nPerformance if learner added:  0.778 0.777 0.778 \nIteration:  99 \nPerformance if learner added:  0.778 0.778 0.778 \nIteration:  100 \nPerformance if learner added:  0.777 0.778 0.778 \n```\n\n\n:::\n\n```{.r .cell-code}\n# configure the ensemble with the optimized weights and evaluate on the outer split\ngrl_weights_optimized_ges = grl$clone(deep = TRUE)\ngrl_weights_optimized_ges$param_set$set_values(.values = list(classifavg.weights = ges_results$weights))\ngrl_weights_optimized_ges$id = paste0(grl_weights_optimized_ges$id, \".optimized_ges\")\n#########################################################################################\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbg = benchmark_grid(task, list(grl, grl_weights_optimized_cmaes, grl_weights_optimized_ges, dt, kknn, log_reg, featureless), outer_split)\nb = benchmark(bg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:23.126] [mlr3] Running benchmark with 7 resampling iterations\nINFO  [18:06:23.164] [mlr3] Applying learner 'classif.rpart.classif.kknn.classif.log_reg.classifavg' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.204] [mlr3] Applying learner 'classif.rpart.classif.kknn.classif.log_reg.classifavg.optimized_cmaes' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.246] [mlr3] Applying learner 'classif.rpart.classif.kknn.classif.log_reg.classifavg.optimized_ges' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.291] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.321] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.351] [mlr3] Applying learner 'classif.log_reg' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.380] [mlr3] Applying learner 'classif.featureless' on task 'german_credit' (iter 1/1)\nINFO  [18:06:23.386] [mlr3] Finished benchmark\n```\n\n\n:::\n\n```{.r .cell-code}\nb$aggregate(msr(\"classif.auc\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      nr       task_id                                                            learner_id resampling_id iters\n   <int>        <char>                                                                <char>        <char> <int>\n1:     1 german_credit                 classif.rpart.classif.kknn.classif.log_reg.classifavg       holdout     1\n2:     2 german_credit classif.rpart.classif.kknn.classif.log_reg.classifavg.optimized_cmaes       holdout     1\n3:     3 german_credit   classif.rpart.classif.kknn.classif.log_reg.classifavg.optimized_ges       holdout     1\n4:     4 german_credit                                                         classif.rpart       holdout     1\n5:     5 german_credit                                                          classif.kknn       holdout     1\n6:     6 german_credit                                                       classif.log_reg       holdout     1\n7:     7 german_credit                                                   classif.featureless       holdout     1\n   classif.auc\n         <num>\n1:   0.7827757\n2:   0.7874274\n3:   0.7874274\n4:   0.7139809\n5:   0.6948831\n6:   0.7800017\n7:   0.5000000\nHidden columns: resample_result\n```\n\n\n:::\n\n```{.r .cell-code}\n# compare the weights\ngrl_weights_optimized_cmaes$param_set$get_values()[[\"classifavg.weights\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     w_dt    w_kknn w_log_reg \n0.4322177 0.1510591 0.4167232 \n```\n\n\n:::\n\n```{.r .cell-code}\ngrl_weights_optimized_ges$param_set$get_values()[[\"classifavg.weights\"]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.4285714 0.1530612 0.4183673\n```\n\n\n:::\n:::\n\n\n\nWe already discussed that GES effectively optimizes weights on an integer scale.\nCMA-ES in contrast can overfit to the validation data.\nIn this example, both performed well with respect to generalization performance.\nFor some more background, see, e.g., https://arxiv.org/pdf/2307.00286\n\n:::\n\n:::\n\n# 2 Single- and Multilayer Stacking\n\n## 2.1 Level 0\n\nWe now want to do stacking.\nUse six learners on level 0: A decision tree, k-NN (with k = 7), an elastic net (alpha = 0.5 and s = 0.1) with categorical features target encoded, naive bayes with categorical features target encoded, XGBoost (nrounds = 100) with categorical features target encoded and a random forest (num.trees = 100).\nDo not cross-validate on level 0 for now.\nTrain on the task and inspect the output of the level 0 graph.\nNow combine level 0 with a logistic regression on level 1.\n\nProceed to benchmark the stacked ensemble against each level 0 learner and the random forest.\nUse 5-fold CV to evaluate the ROC AUC of the models.\n\n<details>\n  <summary>**Hint 1:**</summary>\n  To wrap a learner within an ensemble and use its predictions, the learner_cv `PipeOp` is essential.\n  Its `resampling.method` hyperparameter allows you to cross-validate the predictions or not.\n  Similarly `resampling.folds` allows you to specify the number of folds if predictions should be cross-validated.\n  To combine the level 0 output, use the featureunion `PipeOp`.\n  The following gallery post is helpful: https://mlr-org.com/gallery/pipelines/2020-04-27-tuning-stacking/index.html\n</details>\n\n<details>\n  <summary>**Hint 2:**</summary>\n \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresampling = rsmp(\"cv\", folds = ...)$instantiate(task)\ndt = lrn(\"classif.rpart\")\ndt$predict_type = \"prob\"\nkknn = lrn(..., k = ...)\nkknn$predict_type = \"prob\"\nelnet = lrn(..., alpha = ..., s = ...)\nelnet$predict_type = \"prob\"\nelnet = as_learner(po(...) %>>% ...)\nnaive_bayes = lrn(...)\nnaive_bayes$predict_type = \"prob\"\nnaive_bayes = as_learner(po(...) %>>% ...)\nxgboost = lrn(..., nrounds = ...)\nxgboost = as_learner(po(...) %>>% ...)\nxgboost$predict_type = \"prob\"\nrf = lrn(..., num.trees = ..._\nrf$predict_type = \"prob\"\n\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", learner = ..., resampling.method = ...),\n    ...\n  )\n) %>>% po(...)\nlevel0$plot()\n\nlevel0_train_output = level0$train(task)\nlevel0_train_output\n\nlevel1 = lrn(..., id = \"log_reg_out\")\nlevel1$predict_type = \"prob\"\n\nensemble = as_learner(level0 %>>% level1)\nensemble$id = \"Simple Stacked Ensemble Insample\"\nensemble$graph$plot()\n\nbg = benchmark_grid(..., list(...), ...)\nb = benchmark(bg)\nautoplot(..., measure = ...)\n```\n:::\n\n\n</details>\n\n:::{.callout-note collapse=\"true\"}\n\n### Solution\n\n:::{.b64-solution}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresampling = rsmp(\"cv\", folds = 5L)$instantiate(task)\ndt = lrn(\"classif.rpart\")\ndt$predict_type = \"prob\"\nkknn = lrn(\"classif.kknn\", k = 7L)\nkknn$predict_type = \"prob\"\nelnet = lrn(\"classif.glmnet\", alpha = 0.5, s = 0.01)\nelnet$predict_type = \"prob\"\nelnet = as_learner(po(\"encodeimpact\") %>>% elnet)\nnaive_bayes = lrn(\"classif.naive_bayes\")\nnaive_bayes$predict_type = \"prob\"\nnaive_bayes = as_learner(po(\"encodeimpact\") %>>% naive_bayes)\nxgboost = lrn(\"classif.xgboost\", nrounds = 100L)\nxgboost = as_learner(po(\"encodeimpact\") %>>% xgboost)\nxgboost$predict_type = \"prob\"\nrf = lrn(\"classif.ranger\", num.trees = 100L)\nrf$predict_type = \"prob\"\n\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", learner = dt, resampling.method = \"insample\"),\n    po(\"learner_cv\", learner = kknn, resampling.method = \"insample\"),\n    po(\"learner_cv\", learner = elnet, resampling.method = \"insample\"),\n    po(\"learner_cv\", learner = naive_bayes, resampling.method = \"insample\"),\n    po(\"learner_cv\", learner = xgboost, resampling.method = \"insample\"),\n    po(\"learner_cv\", learner = rf, resampling.method = \"insample\")\n  )\n) %>>% po(\"featureunion\")\nlevel0$plot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\nlevel0_train_output = level0$train(task)\nlevel0_train_output\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$featureunion.output\n<TaskClassif:german_credit> (1000 x 13): German Credit\n* Target: credit_risk\n* Properties: twoclass\n* Features (12):\n  - dbl (12): classif.kknn.prob.bad, classif.kknn.prob.good, classif.ranger.prob.bad,\n    classif.ranger.prob.good, classif.rpart.prob.bad, classif.rpart.prob.good,\n    encodeimpact.classif.glmnet.prob.bad, encodeimpact.classif.glmnet.prob.good,\n    encodeimpact.classif.naive_bayes.prob.bad, encodeimpact.classif.naive_bayes.prob.good,\n    encodeimpact.classif.xgboost.prob.bad, encodeimpact.classif.xgboost.prob.good\n```\n\n\n:::\n:::\n\n\n\nThis is a task that contains the probability predictions for each class from each learner.\nTo also have the predicted class, we could set the `resampling.keep_response` of the learner_cv `PipeOp`.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel1 = lrn(\"classif.log_reg\", id = \"log_reg_out\")\nlevel1$predict_type = \"prob\"\n\nensemble = as_learner(level0 %>>% level1)\nensemble$id = \"Simple Stacked Ensemble Insample\"\nensemble$graph$plot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\nbg = benchmark_grid(task, list(ensemble, dt, kknn, elnet, naive_bayes, xgboost, rf), resampling)\nb = benchmark(bg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:24.533] [mlr3] Running benchmark with 35 resampling iterations\nINFO  [18:06:24.572] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 1/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:24.607] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 2/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:24.643] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 3/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:24.689] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 4/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:24.739] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 5/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:24.787] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/5)\nINFO  [18:06:24.838] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/5)\nINFO  [18:06:24.878] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/5)\nINFO  [18:06:24.915] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 4/5)\nINFO  [18:06:24.958] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 5/5)\nINFO  [18:06:25.077] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/5)\nINFO  [18:06:25.199] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/5)\nINFO  [18:06:25.314] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/5)\nINFO  [18:06:25.436] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 4/5)\nINFO  [18:06:25.485] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 5/5)\nINFO  [18:06:25.540] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/5)\nINFO  [18:06:25.591] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/5)\nINFO  [18:06:25.640] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/5)\nINFO  [18:06:25.684] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 4/5)\nINFO  [18:06:25.734] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 5/5)\nINFO  [18:06:25.786] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/5)\nINFO  [18:06:25.838] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/5)\nINFO  [18:06:25.891] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/5)\nINFO  [18:06:25.944] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 4/5)\nINFO  [18:06:25.990] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 5/5)\nINFO  [18:06:26.036] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/5)\nINFO  [18:06:26.081] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/5)\nINFO  [18:06:26.130] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/5)\nINFO  [18:06:26.177] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 4/5)\nINFO  [18:06:26.222] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 5/5)\nINFO  [18:06:26.272] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/5)\nINFO  [18:06:26.322] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/5)\nINFO  [18:06:26.367] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/5)\nINFO  [18:06:26.412] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 4/5)\nINFO  [18:06:26.456] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 5/5)\nINFO  [18:06:26.496] [mlr3] Finished benchmark\n```\n\n\n:::\n\n```{.r .cell-code}\nautoplot(b, measure = msr(\"classif.auc\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-2.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## 2.2 Cross Validation\n\nSo far, we have not cross-validated the level 0 predictions.\nCreate another stacked ensemble where you use 3-fold CV to cross-validate the level 0 predictions.\n\nProceed to benchmark the cross-validated stacked ensemble against the stacked ensemble, and the random forest.\nUse 5-fold CV to evaluate the ROC AUC of the models.\n\n<details>\n  <summary>**Hint 1:**</summary>\n  You can essentially reuse most of your logic on how to build the graph from the previous exercise. \n  To wrap a learner within an ensemble and use its predictions, the learner_cv `PipeOp` is essential.\n  Have a look at its `resampling.method` parameter to see how to cross-validate level 0 predictions.\n</details>\n\n<details>\n  <summary>**Hint 2:**</summary>\n \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    .\n    .\n    .\n  )\n) %>>% po(\"featureunion\")\n\nensemble_cv = as_learner(level0 %>>% level1)\nensemble_cv$id = \"Simple Stacked Ensemble 3-fold CV\"\n\nbg = benchmark_grid(...)\nb = benchmark(...)\nautoplot(...)\n```\n:::\n\n\n</details>\n\n:::{.callout-note collapse=\"true\"}\n\n### Solution\n\n:::{.b64-solution}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = kknn, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = elnet, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = naive_bayes, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = xgboost, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = rf, resampling.method = \"cv\", resampling.folds = 3L)\n  )\n) %>>% po(\"featureunion\")\n\nensemble_cv = as_learner(level0 %>>% level1)\nensemble_cv$id = \"Simple Stacked Ensemble 3-fold CV\"\n\nbg = benchmark_grid(task, list(ensemble, ensemble_cv, rf), resampling)\nb = benchmark(bg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:27.099] [mlr3] Running benchmark with 15 resampling iterations\nINFO  [18:06:27.134] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 1/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:27.169] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 2/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:27.206] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 3/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:27.246] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 4/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:27.292] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 5/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:27.345] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 1/5)\nINFO  [18:06:27.392] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.402] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.418] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.465] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.490] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.518] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.668] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.752] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.872] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.069] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.209] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.349] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.669] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.884] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.999] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:29.166] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:29.197] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.228] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.402] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 2/5)\nINFO  [18:06:27.457] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.466] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.477] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.521] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.551] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.584] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.721] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.826] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.904] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.051] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.220] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.368] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.682] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.883] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.000] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:29.183] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:29.213] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.241] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.453] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 3/5)\nINFO  [18:06:27.511] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.527] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.536] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.581] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.617] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.654] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.753] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.872] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.935] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.125] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.241] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.381] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.692] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.871] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.993] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:29.150] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:29.181] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.209] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.513] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 4/5)\nINFO  [18:06:27.587] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.614] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.625] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.681] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.717] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.762] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.887] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.010] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.103] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.262] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.389] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.509] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.777] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.985] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.106] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:29.259] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:29.290] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.325] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.585] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 5/5)\nINFO  [18:06:27.658] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.668] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.677] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.711] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:27.772] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:27.806] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:27.933] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.024] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.103] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.270] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.417] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:28.537] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.834] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:28.960] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.151] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:29.311] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:29.346] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:29.389] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:28.346] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/5)\nINFO  [18:06:28.408] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/5)\nINFO  [18:06:28.465] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/5)\nINFO  [18:06:28.523] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 4/5)\nINFO  [18:06:28.577] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 5/5)\nINFO  [18:06:29.604] [mlr3] Finished benchmark\n```\n\n\n:::\n\n```{.r .cell-code}\nautoplot(b, measure = msr(\"classif.auc\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## 2.3 Add the Original Features of the Task\n\nSo far we have dropped the original features of the task.\nCreate another stacked ensemble where you additionally keep the original features of the task.\nSimilarly to before, cross-validate the level 0 predictions.\n\nProceed to benchmark the cross-validated stacked ensemble with features passed through against the cross-validated stacked ensemble, stacked ensemble, and the random forest.\nUse 5-fold CV to evaluate the ROC AUC of the models.\n\n<details>\n  <summary>**Hint 1:**</summary>\n  You can essentially reuse most of your logic on how to build the graph from the previous exercise.\n  To keep the original features of the task in the output of level 0, use the nop `PipeOp` along the learners.\n</details>\n\n<details>\n  <summary>**Hint 2:**</summary>\n \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    ...\n    po(\"nop\")\n  )\n) %>>% po(\"featureunion\")\nlevel0_train_output = level0$train(task)[[1L]]\nlevel0_train_output\n# The task now also contains the original features of the task passed through\n\nensemble_cv_pass = as_learner(level0 %>>% level1)\nensemble_cv_pass$id = \"Simple Stacked Ensemble 3-fold CV + Orig Features\"\n\nbg = benchmark_grid(...)\nb = benchmark(...)\nautoplot(...)\n```\n:::\n\n\n</details>\n\n:::{.callout-note collapse=\"true\"}\n\n### Solution\n\n:::{.b64-solution}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = kknn, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = elnet, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = naive_bayes, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = xgboost, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", learner = rf, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"nop\")\n  )\n) %>>% po(\"featureunion\")\nlevel0_train_output = level0$train(task)[[1L]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:30.108] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:30.138] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:30.168] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:30.221] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:30.250] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:30.280] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:30.383] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:30.415] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:30.446] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:30.563] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:30.594] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:30.626] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:30.890] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:30.922] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:30.954] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.148] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.180] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.212] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\n```\n\n\n:::\n\n```{.r .cell-code}\nlevel0_train_output\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<TaskClassif:german_credit> (1000 x 33): German Credit\n* Target: credit_risk\n* Properties: twoclass\n* Features (32):\n  - fct (14): credit_history, employment_duration, foreign_worker, housing, job, other_debtors,\n    other_installment_plans, people_liable, personal_status_sex, property, purpose, savings, status,\n    telephone\n  - dbl (12): classif.kknn.prob.bad, classif.kknn.prob.good, classif.ranger.prob.bad,\n    classif.ranger.prob.good, classif.rpart.prob.bad, classif.rpart.prob.good,\n    encodeimpact.classif.glmnet.prob.bad, encodeimpact.classif.glmnet.prob.good,\n    encodeimpact.classif.naive_bayes.prob.bad, encodeimpact.classif.naive_bayes.prob.good,\n    encodeimpact.classif.xgboost.prob.bad, encodeimpact.classif.xgboost.prob.good\n  - int (3): age, amount, duration\n  - ord (3): installment_rate, number_credits, present_residence\n```\n\n\n:::\n\n```{.r .cell-code}\n# The task now also contains the original features of the task passed through\n\nensemble_cv_pass = as_learner(level0 %>>% level1)\nensemble_cv_pass$id = \"Simple Stacked Ensemble 3-fold CV + Orig Features\"\n\nbg = benchmark_grid(task, list(ensemble, ensemble_cv, ensemble_cv_pass, rf), resampling)\nb = benchmark(bg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:31.308] [mlr3] Running benchmark with 20 resampling iterations\nINFO  [18:06:31.350] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 1/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:31.384] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 2/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:31.421] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 3/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:31.464] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 4/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:31.521] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 5/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:31.564] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 1/5)\nINFO  [18:06:31.587] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.596] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.609] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.645] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.670] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.705] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.810] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.892] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.961] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.119] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.274] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.432] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.739] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.899] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.044] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.243] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.279] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.319] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.612] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 2/5)\nINFO  [18:06:31.636] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.659] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.672] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.711] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.736] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.764] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.864] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.929] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.984] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.130] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.299] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.426] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.695] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.851] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.995] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.203] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.240] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.289] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.666] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 3/5)\nINFO  [18:06:31.687] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.696] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.709] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.763] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.792] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.825] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.925] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.993] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.060] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.186] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.376] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.526] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.827] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.995] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.149] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.373] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.414] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.452] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.721] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 4/5)\nINFO  [18:06:31.744] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.753] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.767] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.803] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.838] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.875] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.962] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.030] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.106] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.262] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.417] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.552] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.859] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.030] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.211] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.426] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.467] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.497] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.775] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 5/5)\nINFO  [18:06:31.803] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.821] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.833] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:31.868] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:31.896] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:31.921] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.015] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.084] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.153] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.318] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.445] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.560] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.873] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.066] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.235] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.475] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.516] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.560] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.575] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 1/5)\nINFO  [18:06:32.611] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.627] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.647] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.682] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.699] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.723] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.807] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.900] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.976] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.115] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.268] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.424] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.773] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.891] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.009] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:34.177] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.215] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.249] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.637] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 2/5)\nINFO  [18:06:32.675] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.689] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.704] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.733] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.764] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.786] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.876] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.959] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.050] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.207] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.329] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.489] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.833] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.965] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.077] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:34.218] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.246] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.280] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.701] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 3/5)\nINFO  [18:06:32.737] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.750] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.759] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.783] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.814] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.845] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.942] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.017] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.113] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.260] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.406] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.565] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.869] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.995] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.117] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:34.262] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.295] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.325] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.770] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 4/5)\nINFO  [18:06:32.817] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.832] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.842] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.895] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.922] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.949] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.049] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.146] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.220] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.351] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.525] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.665] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.936] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.055] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.170] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:34.319] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.351] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.383] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.843] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 5/5)\nINFO  [18:06:32.881] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.900] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.909] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:32.942] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:32.962] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:32.983] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.084] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.156] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.231] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.382] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:33.497] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:33.676] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.953] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.080] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.193] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:34.339] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:34.367] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:34.400] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:33.754] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/5)\nINFO  [18:06:33.809] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/5)\nINFO  [18:06:33.863] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/5)\nINFO  [18:06:33.916] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 4/5)\nINFO  [18:06:33.983] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 5/5)\nINFO  [18:06:34.657] [mlr3] Finished benchmark\n```\n\n\n:::\n\n```{.r .cell-code}\nautoplot(b, measure = msr(\"classif.auc\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\nUsefulness of passing through the original features of the task usually strongly depends on the higher level learners.\nIf you have time, you may want to play around with the choice of the level 1 learner (or optimize it directly).\n\n:::\n\n:::\n\n## 2.4 Multilayer Stacking Ensemple\nFinally, create a multi-layer stacking ensemble by passing the output of the current level 0 into a level 1 that is built similar as level 1.\nSimilarly to before, keep the original features of the task and cross-validate the level 0 and level 1 predictions.\nThen use a logistic regression on the final level 2.\nMake sure that when you pass the original features of the task to the final level 2 that you do not also pass the cross-validated predictions from level 0.\n\nProceed to benchmark the this cross-validated multi-layer stacked ensemble with features passed through against the cross-validated stacked ensemble with features passed, the cross-validated stacked ensemble, stacked ensemble, and the random forest.\nUse 5-fold CV to evaluate the ROC AUC of the models.\n\n<details>\n  <summary>**Hint 1:**</summary>\n  To make sure that when you pass the original features of the task to the final level 2 that you do not also pass the cross-validated predictions from level 1, use an appropriately configured select `PipeOp`.\n</details>\n\n<details>\n  <summary>**Hint 2:**</summary>\n \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", id = \"dt1_0\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    .\n    .\n    .\n  )\n) %>>% po(\"featureunion\", id = \"featureunion_0\")\nlevel1 = gunion(\n  list(\n    po(\"learner_cv\", id = \"dt1_1\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    .\n    .\n    .\n    po(\"nop\", id = \"nop_1\") %>>% po(\"select\", selector = selector_name(...))  # pass the names of the original features\n  )\n) %>>% po(\"featureunion\", id = \"featureunion_1\")\nlevel2 = lrn(\"classif.log_reg\", id = \"log_reg_out\")\nlevel2$predict_type = \"prob\"\n\nensemble_multilayer_cv_pass = as_learner(level0 %>>% level1 %>>% level2)\nensemble_multilayer_cv_pass$id = \"Multilayer Stacked Ensemble 3-fold CV + Orig Features\"\nensemble_multilayer_cv_pass$graph$plot()\n\nbg = benchmark_grid(...)\nb = benchmark(...)\nautoplot(...)\n```\n:::\n\n\n</details>\n\n:::{.callout-note collapse=\"true\"}\n\n### Solution\n\n:::{.b64-solution}\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlevel0 = gunion(\n  list(\n    po(\"learner_cv\", id = \"dt1_0\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"kknn_0\", learner = kknn, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"elnet_0\", learner = elnet, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"naive_bayes_0\", learner = naive_bayes, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"xgboost_0\", learner = xgboost, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"rf_0\", learner = rf, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"nop\", id = \"nop_0\")\n  )\n) %>>% po(\"featureunion\", id = \"featureunion_0\")\nlevel1 = gunion(\n  list(\n    po(\"learner_cv\", id = \"dt1_1\", learner = dt, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"kknn_1\", learner = kknn, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"elnet_1\", learner = elnet, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"naive_bayes_1\", learner = naive_bayes, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"xgboost_1\", learner = xgboost, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"learner_cv\", id = \"rf_1\", learner = rf, resampling.method = \"cv\", resampling.folds = 3L),\n    po(\"nop\", id = \"nop_1\") %>>% po(\"select\", selector = selector_name(task$feature_names))\n  )\n) %>>% po(\"featureunion\", id = \"featureunion_1\")\nlevel2 = lrn(\"classif.log_reg\", id = \"log_reg_out\")\nlevel2$predict_type = \"prob\"\n\nensemble_multilayer_cv_pass = as_learner(level0 %>>% level1 %>>% level2)\nensemble_multilayer_cv_pass$id = \"Multilayer Stacked Ensemble 3-fold CV + Orig Features\"\nensemble_multilayer_cv_pass$graph$plot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\nbg = benchmark_grid(task, list(ensemble, ensemble_cv, ensemble_cv_pass, ensemble_multilayer_cv_pass, rf), resampling)\nb = benchmark(bg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:35.623] [mlr3] Running benchmark with 25 resampling iterations\nINFO  [18:06:35.659] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 1/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:35.694] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 2/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:35.731] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 3/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:35.771] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 4/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:35.817] [mlr3] Applying learner 'Simple Stacked Ensemble Insample' on task 'german_credit' (iter 5/5)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nINFO  [18:06:35.863] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 1/5)\nINFO  [18:06:35.886] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:35.901] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:35.915] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:35.952] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:35.982] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.004] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.121] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.203] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.261] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.399] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.534] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.662] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.982] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.138] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.332] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.532] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.572] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.605] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:35.913] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 2/5)\nINFO  [18:06:35.933] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:35.942] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:35.951] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:35.999] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.019] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.047] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.160] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.211] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.261] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.352] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.436] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.520] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.818] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.987] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.175] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.402] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.449] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.492] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:35.964] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 3/5)\nINFO  [18:06:35.987] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.003] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.012] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.051] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.079] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.110] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.211] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.297] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.383] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.557] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.724] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.876] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.232] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.417] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.589] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.818] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.855] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.906] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.023] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 4/5)\nINFO  [18:06:36.053] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.073] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.087] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.125] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.161] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.184] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.301] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.374] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.498] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.664] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.788] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.913] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.276] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.436] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.604] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.878] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.924] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.976] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.111] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV' on task 'german_credit' (iter 5/5)\nINFO  [18:06:36.141] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.159] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.168] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.206] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.242] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.268] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.368] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.484] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.573] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.722] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.862] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.004] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.327] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.484] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.646] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.888] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.930] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.976] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.605] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 1/5)\nINFO  [18:06:36.635] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.646] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.670] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.745] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.776] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.799] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.894] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.959] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.035] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.187] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.322] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.482] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.838] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.008] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.186] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.433] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.474] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.517] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.825] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 2/5)\nINFO  [18:06:36.853] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.861] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.877] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.907] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.931] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.963] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.065] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.137] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.204] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.361] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.493] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.643] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.968] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.176] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.369] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.612] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.647] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.691] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.886] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 3/5)\nINFO  [18:06:36.926] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.938] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:36.949] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.981] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.014] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.032] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.141] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.198] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.274] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.452] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.591] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.729] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.067] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.261] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.424] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.653] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.695] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.732] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:36.960] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 4/5)\nINFO  [18:06:36.987] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:36.998] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.017] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.054] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.083] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.112] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.231] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.297] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.418] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.563] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.693] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.823] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.136] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.306] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.461] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.711] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.747] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.786] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.044] [mlr3] Applying learner 'Simple Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 5/5)\nINFO  [18:06:37.073] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.091] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.104] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.127] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.151] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.172] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.270] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.341] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.459] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.581] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:37.684] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:37.811] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.136] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.345] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.526] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.802] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.826] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.863] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:37.985] [mlr3] Applying learner 'Multilayer Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 1/5)\nINFO  [18:06:38.017] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.030] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.042] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.093] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.122] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.153] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.257] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.343] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.456] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.632] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.806] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.997] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.296] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.413] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.529] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.697] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.730] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.760] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.833] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.849] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.867] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.916] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.950] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.975] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.092] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.196] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.294] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.474] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.607] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.755] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.117] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.284] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.434] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.654] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.709] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.755] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.070] [mlr3] Applying learner 'Multilayer Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 2/5)\nINFO  [18:06:38.104] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.122] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.134] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.170] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.213] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.246] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.378] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.448] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.567] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.757] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.932] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.114] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.352] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.470] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.590] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.748] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.782] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.815] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.884] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.907] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.923] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.965] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.989] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.020] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.137] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.231] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.341] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.518] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.657] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.808] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.147] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.312] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.473] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.700] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.746] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.785] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.341] [mlr3] Applying learner 'Multilayer Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 3/5)\nINFO  [18:06:38.391] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.410] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.422] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.455] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.483] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.512] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.646] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.749] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.843] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.014] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.192] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.339] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.583] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.704] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.817] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.982] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.010] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.041] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.112] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.141] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.158] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.206] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.231] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.261] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.389] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.479] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.590] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.753] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.906] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.043] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.405] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.573] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.739] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.963] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:42.007] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:42.061] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.431] [mlr3] Applying learner 'Multilayer Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 4/5)\nINFO  [18:06:38.459] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.474] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.486] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.553] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.593] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.619] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.757] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.855] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.938] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.103] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.203] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.310] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.551] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.666] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.780] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.948] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.981] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.014] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.087] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.105] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.123] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.170] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.199] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.234] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.350] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.451] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.556] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.716] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.876] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.023] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.383] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.563] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.737] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.957] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:42.015] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:42.056] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.516] [mlr3] Applying learner 'Multilayer Stacked Ensemble 3-fold CV + Orig Features' on task 'german_credit' (iter 5/5)\nINFO  [18:06:38.539] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.548] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.557] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.588] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.615] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.633] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.704] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:38.762] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:38.879] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.027] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.171] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.271] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.539] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.677] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:39.787] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:39.940] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:39.971] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.005] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.077] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.097] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.116] [mlr3] Applying learner 'classif.rpart' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.166] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.196] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.225] [mlr3] Applying learner 'classif.kknn' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.343] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.430] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.517] [mlr3] Applying learner 'encodeimpact.classif.glmnet' on task 'german_credit' (iter 3/3)\nINFO  [18:06:40.673] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 1/3)\nINFO  [18:06:40.822] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 2/3)\nINFO  [18:06:40.951] [mlr3] Applying learner 'encodeimpact.classif.naive_bayes' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.351] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.527] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 2/3)\nINFO  [18:06:41.705] [mlr3] Applying learner 'encodeimpact.classif.xgboost' on task 'german_credit' (iter 3/3)\nINFO  [18:06:41.930] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/3)\nINFO  [18:06:41.986] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/3)\nINFO  [18:06:42.033] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/3)\nINFO  [18:06:38.867] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 1/5)\nINFO  [18:06:39.032] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 2/5)\nINFO  [18:06:39.192] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 3/5)\nINFO  [18:06:39.252] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 4/5)\nINFO  [18:06:39.304] [mlr3] Applying learner 'classif.ranger' on task 'german_credit' (iter 5/5)\nINFO  [18:06:42.647] [mlr3] Finished benchmark\n```\n\n\n:::\n\n```{.r .cell-code}\nautoplot(b, measure = msr(\"classif.auc\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-2.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\n# Sometimes beating a random forest baseline can be really difficult.\n```\n:::\n\n\n\n:::\n\n:::\n\n# Summary\nWe implemented Greedy Ensemble Selection from scratch.\nThen we looked at how to implement various ways of stacked ensemblings and benchmarked them.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}