---
sidebar: false
toc: false
---

# Tuning Spaces

{{< include _setup.qmd >}}

```{r}
#| include: false

library("mlr3tuningspaces")

lgr::get_logger("mlr3")$set_threshold("warn")
lgr::get_logger("bbotk")$set_threshold("warn")
```

The package `r ref_pkg("mlr3tuningspaces")` ships with some predefined tuning spaces for hyperparameter optimization.
See the respective manual page for the article from which they were extracted.

```{r}
#| echo: false
#| column: page

content = as.data.table(mlr_tuning_spaces)[, .(key, label, learner, n_values)]

ref_cell = function(value) {
  if (!length(value)) return(NULL)
  mlr3book::ref(sprintf("%s_%s", "mlr_tuning_spaces", value), text = value, format = "htmltools")
}

learner_cell = function(value) {
  if (!length(value)) return(NULL)
  mlr3book::ref(sprintf("%s_%s", "mlr_learners", value), text = value, format = "htmltools")
}

reactable(content, columns = list(
    key = colDef(name = "Key", cell = ref_cell),
    label = colDef(name = "Label", minWidth = 150),
    learner = colDef(name = "Learner", cell = learner_cell),
    n_values = colDef(name = "# Hyperparameters")
  ),
  searchable = TRUE,
  pagination = FALSE,
  highlight = TRUE
)
```

## Example Usage

Load a tuning space for the `r ref("mlr_learners_classif.rpart", text = "classification tree")` learner from the @bischl_hyperparameter_2021 article.

```{r echo=TRUE}
library(mlr3verse)

# load learner and set search space
learner = lts(lrn("classif.rpart"))

# retrieve task
task = tsk("pima")

# load tuner and set batch size
tuner = tnr("random_search", batch_size = 10)

# hyperparameter tuning on the pima data set
instance = tune(
  method = tnr("grid_search", resolution = 5, batch_size = 25),
  task = task,
  learner = learner,
  resampling = rsmp("holdout"),
  measure = msr("classif.ce"),
)

# best performing hyperparameter configuration
instance$result

# fit final model on complete data set
learner$param_set$values = instance$result_learner_param_vals
learner$train(task)

print(learner)
```

