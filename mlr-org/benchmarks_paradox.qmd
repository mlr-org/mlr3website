---
title: "paradox"
sidebar: false
toc: true
---

{{< include _setup.qmd >}}

```{r}
#| include: false
library(data.table)
library(ggplot2)
library(gt)
```

```{r}
#| include: false
data = fread(here::here("mlr-org/benchmark_results/paradox_param_set_runtime.csv"))

snapshot = data.table(
  renv_project = c("snapshot_2023_03_17", "snapshot_2024_06_11", "snapshot_2024_07_09", "snapshot_2024_07_30"),
  paradox = c("0.11.1", "1.0.0", "1.0.1", "1.0.0.c")
)

data[, renv_project := gsub("paradox/default/snapshots/", "", renv_project)]
data = data[snapshot, on = "renv_project"]
data[, paradox := factor(paradox)]
setorderv(data, c("algorithm", "size", "type"))

plot_runtime = function(data) {
  ggplot(data, aes(x = paradox, y = median_run_time)) +
    geom_col(group = 1, fill = "#008080") +
    geom_errorbar(aes(ymin = pmax(0, median_run_time - mad_run_time), ymax = median_run_time + mad_run_time), width = 0.5, position = position_dodge(0.9)) +
    facet_wrap(~size, scales = "free_y", labeller = labeller(size = function(value) sprintf("%s Parameters", value))) +
    labs(x = "paradox Version", y = "Runtime [ms]") +
    theme_minimal(base_size = 7) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
}

create_table = function(data) {
  data = data[, -c("mad_run_time", "renv_project", "mean_run_time", "sd_run_time", "algorithm")]

  data_numeric = data[type == "numeric", -"type"]
  data_categorical = data[type == "categorical", -"type"]
  data_mixed = data[type == "mixed", -"type"]

  data = merge(data_numeric, data_categorical, by = c("paradox", "size"), suffixes = c("", "_categorical"))
  data = merge(data, data_mixed, by = c("paradox", "size"), suffixes = c("", "_mixed"))


  setcolorder(data, c("paradox", "size", "median_run_time", "median_run_time_categorical", "median_run_time_mixed"))

  data %>%
    gt() %>%
    cols_label(
      paradox = "paradox Version",
      size = "n Parameters",
      median_run_time = "Median Runtime Numeric [ms]",
      median_run_time_categorical = "Median Runtime Categorical [ms]",
      median_run_time_mixed = "Median Runtime Mixed [ms]") %>%
    fmt_number(columns = c("median_run_time", "median_run_time_categorical", "median_run_time_mixed"), n_sigfig = 2)  %>%
    tab_row_group(
      label = "500 Parameters",
      rows = size == 500
    ) %>%
    tab_row_group(
      label = "50 Parameters",
      rows = size == 50
    ) %>%
    tab_row_group(
      label = "5 Parameters",
      rows = size == 5
    )
  }
```

# Parameter Set


The runtime of different `ParamSet` functions is compared on different paradox versions.
The number of parameters is 5, 50 and 500.

## Initialization

```{r}
#| eval: false
ps(
  param_1 = p_dbl(lower = 0, upper = 1),
  ...
)
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `ps()` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_initialize" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_initialize"])
```

## Ids

### Default

```{r}
#| eval: false
param_set$ids()
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$ids()` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_ids" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_ids"])
```

### Class

```{r}
#| eval: false
param_set$ids(class = "ParamDbl")
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$ids(class)` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_ids_class" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_ids_class"])
```

### Tags

```{r}
#| eval: false
param_set$ids(tags = "a")
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$ids(type)` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_ids_tags" & type == "numeric"])
```


```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_ids_tags"])
```

### Tags and Class

```{r}
#| eval: false
param_set$ids(class = "ParamDbl", tags = "a")
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$ids(class, tags)` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_ids_class_tags" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_ids_class_tags"])
```

## Get Values

### Default

```{r}
#| eval: false
param_set$get_values()
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$get_values()` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_get_values" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_get_values"])
```

### Class

```{r}
#| eval: false
param_set$get_values(class = "ParamDbl")
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$get_values(class)` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_get_values_class" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_get_values_class"])
```

### Tags

```{r}
#| eval: false
param_set$get_values(tags = "a")
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$get_values(tags)` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_get_values_tags" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_get_values_tags"])
```

### Tags and Class

```{r}
#| eval: false
param_set$get_values(class = "ParamDbl", tags = "a")
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$get_values(class, tags)` depending on the numbers of parameters and the paradox version.
plot_runtime(data[algorithm == "param_set_get_values_class_tags" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_get_values_class_tags"])
```

## Set Values

```{r}
#| eval: false
param_set$set_values(.values = values)
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `$set_values()` depending on the numbers of values and the paradox version.
plot_runtime(data[algorithm == "param_set_set_values" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_set_values"])
```

## Lower

```{r}
#| eval: false
param_set$lower
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `lower` depending on the numbers of values and the paradox version.
plot_runtime(data[algorithm == "param_set_lower" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_lower"])
```

## Upper

```{r}
#| eval: false
param_set$upper
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `lower` depending on the numbers of values and the paradox version.
plot_runtime(data[algorithm == "param_set_upper" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_upper"])
```

## Class

```{r}
#| eval: false
param_set$class
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `lower` depending on the numbers of values and the paradox version.
plot_runtime(data[algorithm == "param_set_class" & type == "numeric"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_class"])
```

## Levels

```{r}
#| eval: false
param_set$levels
```

```{r}
#| echo: false
#| fig-cap: |
#|  Runtime of `lower` depending on the numbers of values and the paradox version.
plot_runtime(data[algorithm == "param_set_levels" & type == "categorical"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[algorithm == "param_set_levels"])
```

# Object Size

```{r}
#| include: false

data = fread(here::here("mlr-org/benchmark_results/paradox_object_size.csv"))

data[, renv_project := gsub("paradox/default/snapshots/", "", renv_project)]
data = data[snapshot, on = "renv_project"]

data[, paradox := factor(paradox, levels = c("0.11.1", "1.0.0", "1.0.1", "1.0.0.c"))]

data = data[, -c("renv_project")]

plot_size = function(data) {
  data = melt(data, id.vars = c("paradox", "object", "set_size"), measure.vars = c("size", "serialized_size"), value.name = "size", variable.name = "type")

  ggplot(data, aes(x = paradox, y = size, fill= type, group = type)) +
    geom_col(position = "dodge") +
    labs(x = "paradox Version", y = "Size [MB]") +
    scale_fill_manual(labels = c("In Memory", "Serialized"), values = c("#008080", "#ff6347"), name = "Type") +
    facet_wrap(~set_size, scales = "free_y", labeller = labeller(size = function(value) sprintf("%s Parameters", value))) +
    theme_minimal(base_size = 7) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
}

create_table = function(data) {
  data = data[, -c("object", "k")]
  setcolorder(data, c("paradox", "set_size", "size", "serialized_size"))

  data %>%
    gt() %>%
    cols_label(
      paradox = "paradox Version",
      set_size = "n Parameters",
      size = "In Memory [MB]",
      serialized_size = "Serialized [MB]") %>%
    fmt_number(columns = c("size", "serialized_size"), n_sigfig = 2) %>%
    tab_row_group(
      label = "500 Parameters",
      rows = set_size == 500
    ) %>%
    tab_row_group(
      label = "50 Parameters",
      rows = set_size == 50
    ) %>%
    tab_row_group(
      label = "5 Parameters",
      rows = set_size == 5
    )
}
```

## Parameter Set

```{r}
#| eval: false
ps(
  param_1 = p_dbl(lower = 0, upper = 1)
)
```

```{r}
#| echo: false
plot_size(data[object == "param_set"])
```

```{r}
#| echo: false
#| column: body-outset
create_table(data[object == "param_set"])
```
